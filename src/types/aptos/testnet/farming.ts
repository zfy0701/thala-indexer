/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

/* Generated modules for account 0x6a2e2786abf51c9abd2f26e0a7cbdfca707820b3517e63f3c1101b5290aedb7b */

import { CallFilter } from "@sentio/sdk/move";
import {
  MoveCoder,
  defaultMoveCoder,
  AptosBindOptions,
  AptosBaseProcessor,
  TypedEventInstance,
  AptosNetwork,
  TypedFunctionPayload,
  AptosContext,
} from "@sentio/sdk/aptos";
import { MoveFetchConfig } from "@sentio/protos";
import { Address, ModuleClient } from "@sentio/sdk/aptos";

import { _0x1 } from "@sentio/sdk/aptos/builtin";

export class farming extends AptosBaseProcessor {
  constructor(options: AptosBindOptions) {
    super("farming", options);
  }
  static DEFAULT_OPTIONS: AptosBindOptions = {
    address:
      "0x6a2e2786abf51c9abd2f26e0a7cbdfca707820b3517e63f3c1101b5290aedb7b",
    network: AptosNetwork.TEST_NET,
  };

  static bind(options: Partial<AptosBindOptions> = {}): farming {
    return new farming({ ...farming.DEFAULT_OPTIONS, ...options });
  }

  onEntryAddPool(
    func: (call: farming.AddPoolPayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): farming {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "farming::add_pool",
      },
      fetchConfig
    );
    return this;
  }

  onEntryInit(
    func: (call: farming.InitPayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): farming {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "farming::init",
      },
      fetchConfig
    );
    return this;
  }

  onEntryInitEvents(
    func: (call: farming.InitEventsPayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): farming {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "farming::init_events",
      },
      fetchConfig
    );
    return this;
  }

  onEntryNewThlEpoch(
    func: (call: farming.NewThlEpochPayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): farming {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "farming::new_thl_epoch",
      },
      fetchConfig
    );
    return this;
  }

  onEntryUpdateExtraReward(
    func: (call: farming.UpdateExtraRewardPayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): farming {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "farming::update_extra_reward",
      },
      fetchConfig
    );
    return this;
  }

  onEntryUpdateThlReward(
    func: (call: farming.UpdateThlRewardPayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): farming {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "farming::update_thl_reward",
      },
      fetchConfig
    );
    return this;
  }

  onEventRewardEpochEvent(
    func: (event: farming.RewardEpochEventInstance, ctx: AptosContext) => void,
    fetchConfig?: MoveFetchConfig
  ): farming {
    this.onMoveEvent(
      func,
      {
        type: "farming::RewardEpochEvent",
      },
      fetchConfig
    );
    return this;
  }

  onEventStakeEvent(
    func: (event: farming.StakeEventInstance, ctx: AptosContext) => void,
    fetchConfig?: MoveFetchConfig
  ): farming {
    this.onMoveEvent(
      func,
      {
        type: "farming::StakeEvent",
      },
      fetchConfig
    );
    return this;
  }

  onEventUnstakeEvent(
    func: (event: farming.UnstakeEventInstance, ctx: AptosContext) => void,
    fetchConfig?: MoveFetchConfig
  ): farming {
    this.onMoveEvent(
      func,
      {
        type: "farming::UnstakeEvent",
      },
      fetchConfig
    );
    return this;
  }

  onEventClaimEvent(
    func: (event: farming.ClaimEventInstance, ctx: AptosContext) => void,
    fetchConfig?: MoveFetchConfig
  ): farming {
    this.onMoveEvent(
      func,
      {
        type: "farming::ClaimEvent",
      },
      fetchConfig
    );
    return this;
  }
}

export namespace farming {
  export class ClaimEvent {
    static TYPE_QNAME =
      "0x6a2e2786abf51c9abd2f26e0a7cbdfca707820b3517e63f3c1101b5290aedb7b::farming::ClaimEvent";
    stake_coin: string;
    reward_coin: string;
    amount: bigint;
  }

  export interface ClaimEventInstance extends TypedEventInstance<ClaimEvent> {
    data_decoded: ClaimEvent;
    type_arguments: [];
  }

  export class EpochInfo {
    static TYPE_QNAME =
      "0x6a2e2786abf51c9abd2f26e0a7cbdfca707820b3517e63f3c1101b5290aedb7b::farming::EpochInfo";
    start_sec: bigint;
    end_sec: bigint;
    reward_per_sec: bigint;
  }

  export class Farming {
    static TYPE_QNAME =
      "0x6a2e2786abf51c9abd2f26e0a7cbdfca707820b3517e63f3c1101b5290aedb7b::farming::Farming";
    pool_info: farming.PoolInfo[];
    thl_epoch: farming.EpochInfo;
    total_thl_alloc_point: bigint;
  }

  export class FarmingEvents {
    static TYPE_QNAME =
      "0x6a2e2786abf51c9abd2f26e0a7cbdfca707820b3517e63f3c1101b5290aedb7b::farming::FarmingEvents";
    reward_epoch_events: _0x1.event.EventHandle<farming.RewardEpochEvent>;
    stake_events: _0x1.event.EventHandle<farming.StakeEvent>;
    unstake_events: _0x1.event.EventHandle<farming.UnstakeEvent>;
    claim_events: _0x1.event.EventHandle<farming.ClaimEvent>;
  }

  export class PoolInfo {
    static TYPE_QNAME =
      "0x6a2e2786abf51c9abd2f26e0a7cbdfca707820b3517e63f3c1101b5290aedb7b::farming::PoolInfo";
    stake_coin: string;
    stake_amount: bigint;
    thl_alloc_point: bigint;
    last_rewards_sec: _0x1.table.Table<string, bigint>;
    acc_rewards_per_share: _0x1.table.Table<string, bigint>;
    extra_rewards: _0x1.table.Table<string, farming.EpochInfo>;
  }

  export class RewardEpochEvent {
    static TYPE_QNAME =
      "0x6a2e2786abf51c9abd2f26e0a7cbdfca707820b3517e63f3c1101b5290aedb7b::farming::RewardEpochEvent";
    reward_coin: string;
    start_sec: bigint;
    end_sec: bigint;
    reward_per_sec: bigint;
  }

  export interface RewardEpochEventInstance
    extends TypedEventInstance<RewardEpochEvent> {
    data_decoded: RewardEpochEvent;
    type_arguments: [];
  }

  export class StakeEvent {
    static TYPE_QNAME =
      "0x6a2e2786abf51c9abd2f26e0a7cbdfca707820b3517e63f3c1101b5290aedb7b::farming::StakeEvent";
    pid: bigint;
    stake_coin: string;
    amount: bigint;
  }

  export interface StakeEventInstance extends TypedEventInstance<StakeEvent> {
    data_decoded: StakeEvent;
    type_arguments: [];
  }

  export class Staker {
    static TYPE_QNAME =
      "0x6a2e2786abf51c9abd2f26e0a7cbdfca707820b3517e63f3c1101b5290aedb7b::farming::Staker";
    pool_info: _0x1.table.Table<bigint, farming.UserPoolInfo>;
  }

  export class UnstakeEvent {
    static TYPE_QNAME =
      "0x6a2e2786abf51c9abd2f26e0a7cbdfca707820b3517e63f3c1101b5290aedb7b::farming::UnstakeEvent";
    pid: bigint;
    stake_coin: string;
    amount: bigint;
  }

  export interface UnstakeEventInstance
    extends TypedEventInstance<UnstakeEvent> {
    data_decoded: UnstakeEvent;
    type_arguments: [];
  }

  export class UserPoolInfo {
    static TYPE_QNAME =
      "0x6a2e2786abf51c9abd2f26e0a7cbdfca707820b3517e63f3c1101b5290aedb7b::farming::UserPoolInfo";
    amount: bigint;
    last_acc_rewards_per_share: _0x1.table.Table<string, bigint>;
    rewards: _0x1.table.Table<string, bigint>;
  }

  export interface AddPoolPayload<T0 = any>
    extends TypedFunctionPayload<[bigint]> {
    arguments_decoded: [bigint];
    type_arguments: [string];
  }

  export interface InitPayload extends TypedFunctionPayload<[]> {
    arguments_decoded: [];
    type_arguments: [];
  }

  export interface InitEventsPayload extends TypedFunctionPayload<[]> {
    arguments_decoded: [];
    type_arguments: [];
  }

  export interface NewThlEpochPayload
    extends TypedFunctionPayload<[bigint, bigint, bigint]> {
    arguments_decoded: [bigint, bigint, bigint];
    type_arguments: [];
  }

  export interface UpdateExtraRewardPayload<T0 = any>
    extends TypedFunctionPayload<[bigint, bigint, bigint, bigint]> {
    arguments_decoded: [bigint, bigint, bigint, bigint];
    type_arguments: [string];
  }

  export interface UpdateThlRewardPayload
    extends TypedFunctionPayload<[bigint, bigint]> {
    arguments_decoded: [bigint, bigint];
    type_arguments: [];
  }
}

export class package_ extends AptosBaseProcessor {
  constructor(options: AptosBindOptions) {
    super("package", options);
  }
  static DEFAULT_OPTIONS: AptosBindOptions = {
    address:
      "0x6a2e2786abf51c9abd2f26e0a7cbdfca707820b3517e63f3c1101b5290aedb7b",
    network: AptosNetwork.TEST_NET,
  };

  static bind(options: Partial<AptosBindOptions> = {}): package_ {
    return new package_({ ...package_.DEFAULT_OPTIONS, ...options });
  }

  onEntryPublishPackage(
    func: (call: package_.PublishPackagePayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): package_ {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "package::publish_package",
      },
      fetchConfig
    );
    return this;
  }
}

export namespace package_ {
  export class ResourceSignerCapability {
    static TYPE_QNAME =
      "0x6a2e2786abf51c9abd2f26e0a7cbdfca707820b3517e63f3c1101b5290aedb7b::package::ResourceSignerCapability";
    signer_cap: _0x1.account.SignerCapability;
  }

  export interface PublishPackagePayload
    extends TypedFunctionPayload<[string, string[]]> {
    arguments_decoded: [string, string[]];
    type_arguments: [];
  }
}

export class scripts extends AptosBaseProcessor {
  constructor(options: AptosBindOptions) {
    super("scripts", options);
  }
  static DEFAULT_OPTIONS: AptosBindOptions = {
    address:
      "0x6a2e2786abf51c9abd2f26e0a7cbdfca707820b3517e63f3c1101b5290aedb7b",
    network: AptosNetwork.TEST_NET,
  };

  static bind(options: Partial<AptosBindOptions> = {}): scripts {
    return new scripts({ ...scripts.DEFAULT_OPTIONS, ...options });
  }

  onEntryClaim(
    func: (call: scripts.ClaimPayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): scripts {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "scripts::claim",
      },
      fetchConfig
    );
    return this;
  }

  onEntryClaimAllThl(
    func: (call: scripts.ClaimAllThlPayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): scripts {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "scripts::claim_all_thl",
      },
      fetchConfig
    );
    return this;
  }

  onEntryStake(
    func: (call: scripts.StakePayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): scripts {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "scripts::stake",
      },
      fetchConfig
    );
    return this;
  }

  onEntryUnstake(
    func: (call: scripts.UnstakePayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): scripts {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "scripts::unstake",
      },
      fetchConfig
    );
    return this;
  }
}

export namespace scripts {
  export class Null {
    static TYPE_QNAME =
      "0x6a2e2786abf51c9abd2f26e0a7cbdfca707820b3517e63f3c1101b5290aedb7b::scripts::Null";
    dummy_field: Boolean;
  }

  export interface ClaimPayload<T0 = any, T1 = any, T2 = any>
    extends TypedFunctionPayload<[bigint]> {
    arguments_decoded: [bigint];
    type_arguments: [string, string, string];
  }

  export interface ClaimAllThlPayload extends TypedFunctionPayload<[]> {
    arguments_decoded: [];
    type_arguments: [];
  }

  export interface StakePayload<T0 = any>
    extends TypedFunctionPayload<[bigint, bigint]> {
    arguments_decoded: [bigint, bigint];
    type_arguments: [string];
  }

  export interface UnstakePayload<T0 = any>
    extends TypedFunctionPayload<[bigint, bigint]> {
    arguments_decoded: [bigint, bigint];
    type_arguments: [string];
  }
}

const MODULES = JSON.parse(
  '[{"bytecode":"","abi":{"address":"0x6a2e2786abf51c9abd2f26e0a7cbdfca707820b3517e63f3c1101b5290aedb7b","name":"farming","friends":[],"exposed_functions":[{"name":"add_pool","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64"],"return":[]},{"name":"claim_all_thl","visibility":"public","is_entry":false,"generic_type_params":[],"params":["&signer"],"return":["0x1::coin::Coin<0x2f27f81bafec20b32a341c5fff087d67bab4d776fbaca9487087af1ceab34ef6::thl_coin::THL>"]},{"name":"claim_extra_reward","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["&signer","u64"],"return":["0x1::coin::Coin<T1>"]},{"name":"claim_thl","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64"],"return":["0x1::coin::Coin<0x2f27f81bafec20b32a341c5fff087d67bab4d776fbaca9487087af1ceab34ef6::thl_coin::THL>"]},{"name":"init","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer"],"return":[]},{"name":"init_events","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer"],"return":[]},{"name":"new_thl_epoch","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer","u64","u64","u64"],"return":[]},{"name":"pool_acc_extra_reward_per_share","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["u64"],"return":["u256"]},{"name":"pool_acc_thl_reward_per_share","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u64"],"return":["u256"]},{"name":"stake","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64","0x1::coin::Coin<T0>"],"return":["0x1::coin::Coin<0x2f27f81bafec20b32a341c5fff087d67bab4d776fbaca9487087af1ceab34ef6::thl_coin::THL>"]},{"name":"stake_and_reward_amount","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["address","u64"],"return":["u64","u64"]},{"name":"unstake","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64","u64"],"return":["0x1::coin::Coin<T0>","0x1::coin::Coin<0x2f27f81bafec20b32a341c5fff087d67bab4d776fbaca9487087af1ceab34ef6::thl_coin::THL>"]},{"name":"update_extra_reward","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64","u64","u64","u64"],"return":[]},{"name":"update_thl_reward","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer","u64","u64"],"return":[]}],"structs":[{"name":"ClaimEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[],"fields":[{"name":"stake_coin","type":"0x1::string::String"},{"name":"reward_coin","type":"0x1::string::String"},{"name":"amount","type":"u64"}]},{"name":"EpochInfo","is_native":false,"abilities":["copy","drop","store"],"generic_type_params":[],"fields":[{"name":"start_sec","type":"u64"},{"name":"end_sec","type":"u64"},{"name":"reward_per_sec","type":"u64"}]},{"name":"Farming","is_native":false,"abilities":["key"],"generic_type_params":[],"fields":[{"name":"pool_info","type":"vector<0x6a2e2786abf51c9abd2f26e0a7cbdfca707820b3517e63f3c1101b5290aedb7b::farming::PoolInfo>"},{"name":"thl_epoch","type":"0x6a2e2786abf51c9abd2f26e0a7cbdfca707820b3517e63f3c1101b5290aedb7b::farming::EpochInfo"},{"name":"total_thl_alloc_point","type":"u64"}]},{"name":"FarmingEvents","is_native":false,"abilities":["key"],"generic_type_params":[],"fields":[{"name":"reward_epoch_events","type":"0x1::event::EventHandle<0x6a2e2786abf51c9abd2f26e0a7cbdfca707820b3517e63f3c1101b5290aedb7b::farming::RewardEpochEvent>"},{"name":"stake_events","type":"0x1::event::EventHandle<0x6a2e2786abf51c9abd2f26e0a7cbdfca707820b3517e63f3c1101b5290aedb7b::farming::StakeEvent>"},{"name":"unstake_events","type":"0x1::event::EventHandle<0x6a2e2786abf51c9abd2f26e0a7cbdfca707820b3517e63f3c1101b5290aedb7b::farming::UnstakeEvent>"},{"name":"claim_events","type":"0x1::event::EventHandle<0x6a2e2786abf51c9abd2f26e0a7cbdfca707820b3517e63f3c1101b5290aedb7b::farming::ClaimEvent>"}]},{"name":"PoolInfo","is_native":false,"abilities":["store"],"generic_type_params":[],"fields":[{"name":"stake_coin","type":"0x1::string::String"},{"name":"stake_amount","type":"u64"},{"name":"thl_alloc_point","type":"u64"},{"name":"last_rewards_sec","type":"0x1::table::Table<0x1::string::String, u64>"},{"name":"acc_rewards_per_share","type":"0x1::table::Table<0x1::string::String, u256>"},{"name":"extra_rewards","type":"0x1::table::Table<0x1::string::String, 0x6a2e2786abf51c9abd2f26e0a7cbdfca707820b3517e63f3c1101b5290aedb7b::farming::EpochInfo>"}]},{"name":"RewardEpochEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[],"fields":[{"name":"reward_coin","type":"0x1::string::String"},{"name":"start_sec","type":"u64"},{"name":"end_sec","type":"u64"},{"name":"reward_per_sec","type":"u64"}]},{"name":"StakeEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[],"fields":[{"name":"pid","type":"u64"},{"name":"stake_coin","type":"0x1::string::String"},{"name":"amount","type":"u64"}]},{"name":"Staker","is_native":false,"abilities":["key"],"generic_type_params":[],"fields":[{"name":"pool_info","type":"0x1::table::Table<u64, 0x6a2e2786abf51c9abd2f26e0a7cbdfca707820b3517e63f3c1101b5290aedb7b::farming::UserPoolInfo>"}]},{"name":"UnstakeEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[],"fields":[{"name":"pid","type":"u64"},{"name":"stake_coin","type":"0x1::string::String"},{"name":"amount","type":"u64"}]},{"name":"UserPoolInfo","is_native":false,"abilities":["store"],"generic_type_params":[],"fields":[{"name":"amount","type":"u64"},{"name":"last_acc_rewards_per_share","type":"0x1::table::Table<0x1::string::String, u256>"},{"name":"rewards","type":"0x1::table::Table<0x1::string::String, u64>"}]}]}},{"bytecode":"0xa11ceb0b060000000c01000c020c08031441055526077b8f03088a046006ea047d10e705af010a9607060c9c07b0010dcc08020fce0802000101020103010401050206000708000110060000080001000009020000000a000300000b040000000c000100000d000100000e0005000111060100041202010003130809000514020300021504000001160a050000010501060c010103060c0a020a0a02010c0206050a020205080102060c0501080101060801076661726d696e67077061636b616765076163636f756e7404636f6465107265736f757263655f6163636f756e74067369676e6572076d616e61676572185265736f757263655369676e65724361706162696c69747920646572697665645f7265736f757263655f6163636f756e745f616464726573730b696e69745f6d6f64756c650b696e697469616c697a65640f7075626c6973685f7061636b616765187265736f757263655f6163636f756e745f61646472657373217265736f757263655f6163636f756e745f6465706c6f7965725f61646472657373177265736f757263655f6163636f756e745f7369676e65720a7369676e65725f636170105369676e65724361706162696c697479176372656174655f7265736f757263655f616464726573730a616464726573735f6f661d72657472696576655f7265736f757263655f6163636f756e745f6361700d69735f617574686f72697a6564137075626c6973685f7061636b6167655f74786e1d6372656174655f7369676e65725f776974685f6361706162696c6974796a2e2786abf51c9abd2f26e0a7cbdfca707820b3517e63f3c1101b5290aedb7b0000000000000000000000000000000000000000000000000000000000000001a0d65f5dbab2275368ec253a80019847394390765b18460e4ea13053ff0c19860520bcb6f40cfe74863507ce54b9f52ecff23e5667161ff70d43ffac124dc2c72e5b0308030000000000000003080100000000000000030800000000000000000308020000000000000005206a2e2786abf51c9abd2f26e0a7cbdfca707820b3517e63f3c1101b5290aedb7b0a020e0d7468616c615f6661726d696e67126170746f733a3a6d657461646174615f76319a01040000000000000000184552525f5041434b4147455f554e415554484f52495a45440b4572726f7220436f6465730100000000000000174552525f5041434b4147455f494e495449414c495a4544000200000000000000194552525f5041434b4147455f554e494e495449414c495a45440003000000000000001c4552525f5041434b4147455f414444524553535f4d49534d415443480000000002010f080100000000010607000c000e0007061107020100000007270a0011080c010a012900200408050c0b00010702270a01110021041105150b00010701270b01110421041a051e0b00010701270a00070011090c020b000b0212002d000202010000000311042900020301040100050d0b00110a0404050607032711060c030e030b010b02110b020401000000020705020501000000020700020603000100000a11020403050507042711042b001000110c020000000000","abi":{"address":"0x6a2e2786abf51c9abd2f26e0a7cbdfca707820b3517e63f3c1101b5290aedb7b","name":"package","friends":["0x6a2e2786abf51c9abd2f26e0a7cbdfca707820b3517e63f3c1101b5290aedb7b::farming"],"exposed_functions":[{"name":"initialized","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":["bool"]},{"name":"publish_package","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer","vector<u8>","vector<vector<u8>>"],"return":[]},{"name":"resource_account_address","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":["address"]},{"name":"resource_account_deployer_address","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":["address"]},{"name":"resource_account_signer","visibility":"friend","is_entry":false,"generic_type_params":[],"params":[],"return":["signer"]}],"structs":[{"name":"ResourceSignerCapability","is_native":false,"abilities":["key"],"generic_type_params":[],"fields":[{"name":"signer_cap","type":"0x1::account::SignerCapability"}]}]}},{"bytecode":"0xa11ceb0b060000000901000e020e120320660486012605ac017507a102f001089104600af104050cf604dc01000001010102010301040205000600070000010f04010001051000000315070000080001030000000009020100000a01030100000b04010100000c02010100000d04010100061100070100021202090001130a0101000614000d0200000609020700041601100100011700130100060b14070100011809030100011902010100060d04120100060604080808020b090c040b080b020e090f040e080e0b060b110c060d060e060f061006080602060c030001060c010103060c0303030b010109010b010109020b01010802010900010b01010802010802010502050b010109000109010209000901010b010109010109020209000902010803010800020b010109000b01010802010b0101090003060c030b01010900020b010108020b01010900077363726970747304636f696e067369676e657206737472696e6709747970655f696e666f0874686c5f636f696e076661726d696e67044e756c6c05636c61696d0d636c61696d5f616c6c5f74686c0769735f6e756c6c057374616b650c7472795f726567697374657207756e7374616b650b64756d6d795f6669656c6404436f696e0354484c09636c61696d5f74686c0a616464726573735f6f66076465706f73697412636c61696d5f65787472615f72657761726406537472696e6709747970655f6e616d650877697468647261771569735f6163636f756e745f726567697374657265640872656769737465726a2e2786abf51c9abd2f26e0a7cbdfca707820b3517e63f3c1101b5290aedb7b00000000000000000000000000000000000000000000000000000000000000012f27f81bafec20b32a341c5fff087d67bab4d776fbaca9487087af1ceab34ef60002010e010001040005280a000a0138000c040a0038010a0011070b04380238032004170a000a0138040c020a0038050a0011070b02380638072004250a000b0138080c030a0038090b0011070b03380a05270b00010201010400070a0a00110a0c010a0038010b0011070b01380202020000000104380b380c21020301040012100a000b02380d0c030a000b010b03380e0c040a0038010b0011070b0438020204000000010b0a001107380f2004080b003810050a0b0001020501040015110a000b010b0238110c030c040a0011070b0438120a0038010b0011070b0338020200","abi":{"address":"0x6a2e2786abf51c9abd2f26e0a7cbdfca707820b3517e63f3c1101b5290aedb7b","name":"scripts","friends":[],"exposed_functions":[{"name":"claim","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["&signer","u64"],"return":[]},{"name":"claim_all_thl","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer"],"return":[]},{"name":"stake","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64","u64"],"return":[]},{"name":"unstake","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64","u64"],"return":[]}],"structs":[{"name":"Null","is_native":false,"abilities":[],"generic_type_params":[],"fields":[{"name":"dummy_field","type":"bool"}]}]}}]'
);

export function loadAllTypes(coder: MoveCoder) {
  _0x1.loadAllTypes(coder);
  for (const m of Object.values(MODULES)) {
    coder.load(m as any);
  }
}

loadAllTypes(defaultMoveCoder());
