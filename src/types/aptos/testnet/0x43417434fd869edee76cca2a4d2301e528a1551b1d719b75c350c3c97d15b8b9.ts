/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

/* Generated modules for account 0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9 */

import {
  TypeRegistry,
  AptosBindOptions,
  AptosBaseProcessor,
  TypedEventInstance,
  AptosNetwork,
  TypedEntryFunctionPayload,
  AptosContext,
  CallFilter,
} from "@sentio/sdk-aptos";
import { AptosFetchConfig } from "@sentio/protos";
import { Address, MoveModule } from "aptos-sdk/src/generated";

import * as _0x1 from "@sentio/sdk-aptos/lib/builtin/0x1";
import * as _0x385068db10693e06512ed54b1e6e8f1fb9945bb7a78c28a45585939ce953f99e from "./0x385068db10693e06512ed54b1e6e8f1fb9945bb7a78c28a45585939ce953f99e";

export namespace math {
  export function loadTypes(_r: TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9","name":"math","friends":[],"exposed_functions":[{"name":"min_u64","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u64","u64"],"return":["u64"]},{"name":"mul_div","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u64","u64","u64"],"return":["u64"]},{"name":"mul_div_u128","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u128","u128","u128"],"return":["u64"]},{"name":"mul_to_u128","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u64","u64"],"return":["u128"]},{"name":"overflow_add","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u128","u128"],"return":["u128"]},{"name":"pow_10","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u8"],"return":["u64"]},{"name":"sqrt","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u128"],"return":["u64"]}],"structs":[]}'
  );
}

export namespace u256 {
  export class DU256 {
    static TYPE_QNAME =
      "0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::u256::DU256";
    v0: bigint;
    v1: bigint;
    v2: bigint;
    v3: bigint;
    v4: bigint;
    v5: bigint;
    v6: bigint;
    v7: bigint;
  }

  export class U256 {
    static TYPE_QNAME =
      "0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::u256::U256";
    v0: bigint;
    v1: bigint;
    v2: bigint;
    v3: bigint;
  }

  export function loadTypes(_r: TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9","name":"u256","friends":[],"exposed_functions":[{"name":"add","visibility":"public","is_entry":false,"generic_type_params":[],"params":["0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::u256::U256","0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::u256::U256"],"return":["0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::u256::U256"]},{"name":"as_u128","visibility":"public","is_entry":false,"generic_type_params":[],"params":["0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::u256::U256"],"return":["u128"]},{"name":"as_u64","visibility":"public","is_entry":false,"generic_type_params":[],"params":["0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::u256::U256"],"return":["u64"]},{"name":"compare","visibility":"public","is_entry":false,"generic_type_params":[],"params":["&0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::u256::U256","&0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::u256::U256"],"return":["u8"]},{"name":"div","visibility":"public","is_entry":false,"generic_type_params":[],"params":["0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::u256::U256","0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::u256::U256"],"return":["0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::u256::U256"]},{"name":"from_u128","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u128"],"return":["0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::u256::U256"]},{"name":"from_u64","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u64"],"return":["0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::u256::U256"]},{"name":"get","visibility":"public","is_entry":false,"generic_type_params":[],"params":["&0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::u256::U256","u64"],"return":["u64"]},{"name":"mul","visibility":"public","is_entry":false,"generic_type_params":[],"params":["0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::u256::U256","0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::u256::U256"],"return":["0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::u256::U256"]},{"name":"shl","visibility":"public","is_entry":false,"generic_type_params":[],"params":["0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::u256::U256","u8"],"return":["0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::u256::U256"]},{"name":"shr","visibility":"public","is_entry":false,"generic_type_params":[],"params":["0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::u256::U256","u8"],"return":["0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::u256::U256"]},{"name":"sub","visibility":"public","is_entry":false,"generic_type_params":[],"params":["0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::u256::U256","0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::u256::U256"],"return":["0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::u256::U256"]},{"name":"zero","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":["0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::u256::U256"]}],"structs":[{"name":"DU256","is_native":false,"abilities":["copy","drop","store"],"generic_type_params":[],"fields":[{"name":"v0","type":"u64"},{"name":"v1","type":"u64"},{"name":"v2","type":"u64"},{"name":"v3","type":"u64"},{"name":"v4","type":"u64"},{"name":"v5","type":"u64"},{"name":"v6","type":"u64"},{"name":"v7","type":"u64"}]},{"name":"U256","is_native":false,"abilities":["copy","drop","store"],"generic_type_params":[],"fields":[{"name":"v0","type":"u64"},{"name":"v1","type":"u64"},{"name":"v2","type":"u64"},{"name":"v3","type":"u64"}]}]}'
  );
}

export class coins extends AptosBaseProcessor {
  constructor(options: AptosBindOptions) {
    super("coins", options);
  }
  static DEFAULT_OPTIONS: AptosBindOptions = {
    address:
      "0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9",
    network: AptosNetwork.TEST_NET,
  };

  static bind(options: Partial<AptosBindOptions> = {}): coins {
    return new coins({ ...coins.DEFAULT_OPTIONS, ...options });
  }

  onEntryMintCoin(
    func: (call: coins.MintCoinPayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: AptosFetchConfig
  ): coins {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "coins::mint_coin",
      },
      fetchConfig
    );
    return this;
  }

  onEntryRegisterCoins(
    func: (call: coins.RegisterCoinsPayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: AptosFetchConfig
  ): coins {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "coins::register_coins",
      },
      fetchConfig
    );
    return this;
  }

  loadTypesInternal(registry: TypeRegistry) {
    loadAllTypes(registry);
  }
}

export namespace coins {
  export class BTC {
    static TYPE_QNAME =
      "0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::coins::BTC";
    dummy_field: Boolean;
  }

  export class Caps<T0> {
    static TYPE_QNAME =
      "0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::coins::Caps";
    mint: _0x1.coin.MintCapability<T0>;
    burn: _0x1.coin.BurnCapability<T0>;
  }

  export class USDT {
    static TYPE_QNAME =
      "0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::coins::USDT";
    dummy_field: Boolean;
  }

  export interface MintCoinPayload<T0 = any>
    extends TypedEntryFunctionPayload<[Address, bigint]> {
    arguments_typed: [Address, bigint];
    type_arguments: [string];
  }

  export interface RegisterCoinsPayload extends TypedEntryFunctionPayload<[]> {
    arguments_typed: [];
    type_arguments: [];
  }

  export function loadTypes(_r: TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9","name":"coins","friends":[],"exposed_functions":[{"name":"mint_coin","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","address","u64"],"return":[]},{"name":"register_coins","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer"],"return":[]}],"structs":[{"name":"BTC","is_native":false,"abilities":[],"generic_type_params":[],"fields":[{"name":"dummy_field","type":"bool"}]},{"name":"Caps","is_native":false,"abilities":["key"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"mint","type":"0x1::coin::MintCapability<T0>"},{"name":"burn","type":"0x1::coin::BurnCapability<T0>"}]},{"name":"USDT","is_native":false,"abilities":[],"generic_type_params":[],"fields":[{"name":"dummy_field","type":"bool"}]}]}'
  );
}

export namespace curves {
  export class Stable {
    static TYPE_QNAME =
      "0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::curves::Stable";
    dummy_field: Boolean;
  }

  export class Uncorrelated {
    static TYPE_QNAME =
      "0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::curves::Uncorrelated";
    dummy_field: Boolean;
  }

  export function loadTypes(_r: TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9","name":"curves","friends":[],"exposed_functions":[{"name":"is_stable","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":[],"return":["bool"]},{"name":"is_uncorrelated","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":[],"return":["bool"]}],"structs":[{"name":"Stable","is_native":false,"abilities":[],"generic_type_params":[],"fields":[{"name":"dummy_field","type":"bool"}]},{"name":"Uncorrelated","is_native":false,"abilities":[],"generic_type_params":[],"fields":[{"name":"dummy_field","type":"bool"}]}]}'
  );
}

export class faucet extends AptosBaseProcessor {
  constructor(options: AptosBindOptions) {
    super("faucet", options);
  }
  static DEFAULT_OPTIONS: AptosBindOptions = {
    address:
      "0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9",
    network: AptosNetwork.TEST_NET,
  };

  static bind(options: Partial<AptosBindOptions> = {}): faucet {
    return new faucet({ ...faucet.DEFAULT_OPTIONS, ...options });
  }

  onEntryChangeSettings(
    func: (call: faucet.ChangeSettingsPayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: AptosFetchConfig
  ): faucet {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "faucet::change_settings",
      },
      fetchConfig
    );
    return this;
  }

  onEntryCreateFaucet(
    func: (call: faucet.CreateFaucetPayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: AptosFetchConfig
  ): faucet {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "faucet::create_faucet",
      },
      fetchConfig
    );
    return this;
  }

  onEntryDeposit(
    func: (call: faucet.DepositPayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: AptosFetchConfig
  ): faucet {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "faucet::deposit",
      },
      fetchConfig
    );
    return this;
  }

  onEntryRequest(
    func: (call: faucet.RequestPayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: AptosFetchConfig
  ): faucet {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "faucet::request",
      },
      fetchConfig
    );
    return this;
  }

  loadTypesInternal(registry: TypeRegistry) {
    loadAllTypes(registry);
  }
}

export namespace faucet {
  export class Faucet<T0> {
    static TYPE_QNAME =
      "0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::faucet::Faucet";
    deposit: _0x1.coin.Coin<T0>;
    per_request: bigint;
    period: bigint;
  }

  export class Restricted<T0> {
    static TYPE_QNAME =
      "0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::faucet::Restricted";
    since: bigint;
  }

  export interface ChangeSettingsPayload<T0 = any>
    extends TypedEntryFunctionPayload<[bigint, bigint]> {
    arguments_typed: [bigint, bigint];
    type_arguments: [string];
  }

  export interface CreateFaucetPayload<T0 = any>
    extends TypedEntryFunctionPayload<[bigint, bigint, bigint]> {
    arguments_typed: [bigint, bigint, bigint];
    type_arguments: [string];
  }

  export interface DepositPayload<T0 = any>
    extends TypedEntryFunctionPayload<[Address, bigint]> {
    arguments_typed: [Address, bigint];
    type_arguments: [string];
  }

  export interface RequestPayload<T0 = any>
    extends TypedEntryFunctionPayload<[Address]> {
    arguments_typed: [Address];
    type_arguments: [string];
  }

  export function loadTypes(_r: TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9","name":"faucet","friends":[],"exposed_functions":[{"name":"change_settings","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64","u64"],"return":[]},{"name":"change_settings_internal","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64","u64"],"return":[]},{"name":"create_faucet","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64","u64","u64"],"return":[]},{"name":"create_faucet_internal","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&signer","0x1::coin::Coin<T0>","u64","u64"],"return":[]},{"name":"deposit","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","address","u64"],"return":[]},{"name":"deposit_internal","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["address","0x1::coin::Coin<T0>"],"return":[]},{"name":"request","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","address"],"return":[]},{"name":"request_internal","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&signer","address"],"return":["0x1::coin::Coin<T0>"]}],"structs":[{"name":"Faucet","is_native":false,"abilities":["key"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"deposit","type":"0x1::coin::Coin<T0>"},{"name":"per_request","type":"u64"},{"name":"period","type":"u64"}]},{"name":"Restricted","is_native":false,"abilities":["key"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"since","type":"u64"}]}]}'
  );
}

export namespace router {
  export function loadTypes(_r: TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9","name":"router","friends":[],"exposed_functions":[{"name":"add_liquidity","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["0x1::coin::Coin<T0>","u64","0x1::coin::Coin<T1>","u64"],"return":["0x1::coin::Coin<T0>","0x1::coin::Coin<T1>","0x1::coin::Coin<0x385068db10693e06512ed54b1e6e8f1fb9945bb7a78c28a45585939ce953f99e::lp_coin::LP<T0, T1, T2>>"]},{"name":"calc_optimal_coin_values","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["u64","u64","u64","u64"],"return":["u64","u64"]},{"name":"convert_with_current_price","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u64","u64","u64"],"return":["u64"]},{"name":"get_amount_in","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["u64"],"return":["u64"]},{"name":"get_amount_out","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["u64"],"return":["u64"]},{"name":"get_cumulative_prices","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":[],"return":["u128","u128","u64"]},{"name":"get_decimals_scales","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":[],"return":["u64","u64"]},{"name":"get_reserves_for_lp_coins","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["u64"],"return":["u64","u64"]},{"name":"get_reserves_size","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":[],"return":["u64","u64"]},{"name":"is_swap_exists","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":[],"return":["bool"]},{"name":"register_pool","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["&signer"],"return":[]},{"name":"remove_liquidity","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["0x1::coin::Coin<0x385068db10693e06512ed54b1e6e8f1fb9945bb7a78c28a45585939ce953f99e::lp_coin::LP<T0, T1, T2>>","u64","u64"],"return":["0x1::coin::Coin<T0>","0x1::coin::Coin<T1>"]},{"name":"swap_coin_for_coin_unchecked","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["0x1::coin::Coin<T0>","u64"],"return":["0x1::coin::Coin<T1>"]},{"name":"swap_coin_for_exact_coin","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["0x1::coin::Coin<T0>","u64"],"return":["0x1::coin::Coin<T0>","0x1::coin::Coin<T1>"]},{"name":"swap_exact_coin_for_coin","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["0x1::coin::Coin<T0>","u64"],"return":["0x1::coin::Coin<T1>"]}],"structs":[]}'
  );
}

export class scripts extends AptosBaseProcessor {
  constructor(options: AptosBindOptions) {
    super("scripts", options);
  }
  static DEFAULT_OPTIONS: AptosBindOptions = {
    address:
      "0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9",
    network: AptosNetwork.TEST_NET,
  };

  static bind(options: Partial<AptosBindOptions> = {}): scripts {
    return new scripts({ ...scripts.DEFAULT_OPTIONS, ...options });
  }

  onEntryAddLiquidity(
    func: (call: scripts.AddLiquidityPayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: AptosFetchConfig
  ): scripts {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "scripts::add_liquidity",
      },
      fetchConfig
    );
    return this;
  }

  onEntryRegisterPool(
    func: (call: scripts.RegisterPoolPayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: AptosFetchConfig
  ): scripts {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "scripts::register_pool",
      },
      fetchConfig
    );
    return this;
  }

  onEntryRegisterPoolAndAddLiquidity(
    func: (
      call: scripts.RegisterPoolAndAddLiquidityPayload,
      ctx: AptosContext
    ) => void,
    filter?: CallFilter,
    fetchConfig?: AptosFetchConfig
  ): scripts {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "scripts::register_pool_and_add_liquidity",
      },
      fetchConfig
    );
    return this;
  }

  onEntryRemoveLiquidity(
    func: (call: scripts.RemoveLiquidityPayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: AptosFetchConfig
  ): scripts {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "scripts::remove_liquidity",
      },
      fetchConfig
    );
    return this;
  }

  onEntrySwap(
    func: (call: scripts.SwapPayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: AptosFetchConfig
  ): scripts {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "scripts::swap",
      },
      fetchConfig
    );
    return this;
  }

  onEntrySwapInto(
    func: (call: scripts.SwapIntoPayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: AptosFetchConfig
  ): scripts {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "scripts::swap_into",
      },
      fetchConfig
    );
    return this;
  }

  loadTypesInternal(registry: TypeRegistry) {
    loadAllTypes(registry);
  }
}

export namespace scripts {
  export interface AddLiquidityPayload<T0 = any, T1 = any, T2 = any>
    extends TypedEntryFunctionPayload<[bigint, bigint, bigint, bigint]> {
    arguments_typed: [bigint, bigint, bigint, bigint];
    type_arguments: [string, string, string];
  }

  export interface RegisterPoolPayload<T0 = any, T1 = any, T2 = any>
    extends TypedEntryFunctionPayload<[]> {
    arguments_typed: [];
    type_arguments: [string, string, string];
  }

  export interface RegisterPoolAndAddLiquidityPayload<
    T0 = any,
    T1 = any,
    T2 = any
  > extends TypedEntryFunctionPayload<[bigint, bigint, bigint, bigint]> {
    arguments_typed: [bigint, bigint, bigint, bigint];
    type_arguments: [string, string, string];
  }

  export interface RemoveLiquidityPayload<T0 = any, T1 = any, T2 = any>
    extends TypedEntryFunctionPayload<[bigint, bigint, bigint]> {
    arguments_typed: [bigint, bigint, bigint];
    type_arguments: [string, string, string];
  }

  export interface SwapPayload<T0 = any, T1 = any, T2 = any>
    extends TypedEntryFunctionPayload<[bigint, bigint]> {
    arguments_typed: [bigint, bigint];
    type_arguments: [string, string, string];
  }

  export interface SwapIntoPayload<T0 = any, T1 = any, T2 = any>
    extends TypedEntryFunctionPayload<[bigint, bigint]> {
    arguments_typed: [bigint, bigint];
    type_arguments: [string, string, string];
  }

  export function loadTypes(_r: TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9","name":"scripts","friends":[],"exposed_functions":[{"name":"add_liquidity","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["&signer","u64","u64","u64","u64"],"return":[]},{"name":"register_pool","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["&signer"],"return":[]},{"name":"register_pool_and_add_liquidity","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["&signer","u64","u64","u64","u64"],"return":[]},{"name":"remove_liquidity","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["&signer","u64","u64","u64"],"return":[]},{"name":"swap","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["&signer","u64","u64"],"return":[]},{"name":"swap_into","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["&signer","u64","u64"],"return":[]}],"structs":[]}'
  );
}

export namespace uq64x64 {
  export class UQ64x64 {
    static TYPE_QNAME =
      "0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::uq64x64::UQ64x64";
    v: bigint;
  }

  export function loadTypes(_r: TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9","name":"uq64x64","friends":[],"exposed_functions":[{"name":"compare","visibility":"public","is_entry":false,"generic_type_params":[],"params":["&0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::uq64x64::UQ64x64","&0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::uq64x64::UQ64x64"],"return":["u8"]},{"name":"decode","visibility":"public","is_entry":false,"generic_type_params":[],"params":["0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::uq64x64::UQ64x64"],"return":["u64"]},{"name":"div","visibility":"public","is_entry":false,"generic_type_params":[],"params":["0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::uq64x64::UQ64x64","u64"],"return":["0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::uq64x64::UQ64x64"]},{"name":"encode","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u64"],"return":["0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::uq64x64::UQ64x64"]},{"name":"fraction","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u64","u64"],"return":["0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::uq64x64::UQ64x64"]},{"name":"is_zero","visibility":"public","is_entry":false,"generic_type_params":[],"params":["&0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::uq64x64::UQ64x64"],"return":["bool"]},{"name":"mul","visibility":"public","is_entry":false,"generic_type_params":[],"params":["0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::uq64x64::UQ64x64","u64"],"return":["0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::uq64x64::UQ64x64"]},{"name":"to_u128","visibility":"public","is_entry":false,"generic_type_params":[],"params":["0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::uq64x64::UQ64x64"],"return":["u128"]}],"structs":[{"name":"UQ64x64","is_native":false,"abilities":["copy","drop","store"],"generic_type_params":[],"fields":[{"name":"v","type":"u128"}]}]}'
  );
}

export class emergency extends AptosBaseProcessor {
  constructor(options: AptosBindOptions) {
    super("emergency", options);
  }
  static DEFAULT_OPTIONS: AptosBindOptions = {
    address:
      "0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9",
    network: AptosNetwork.TEST_NET,
  };

  static bind(options: Partial<AptosBindOptions> = {}): emergency {
    return new emergency({ ...emergency.DEFAULT_OPTIONS, ...options });
  }

  onEntryDisableForever(
    func: (call: emergency.DisableForeverPayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: AptosFetchConfig
  ): emergency {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "emergency::disable_forever",
      },
      fetchConfig
    );
    return this;
  }

  onEntryPause(
    func: (call: emergency.PausePayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: AptosFetchConfig
  ): emergency {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "emergency::pause",
      },
      fetchConfig
    );
    return this;
  }

  onEntryResume(
    func: (call: emergency.ResumePayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: AptosFetchConfig
  ): emergency {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "emergency::resume",
      },
      fetchConfig
    );
    return this;
  }

  loadTypesInternal(registry: TypeRegistry) {
    loadAllTypes(registry);
  }
}

export namespace emergency {
  export class Disabled {
    static TYPE_QNAME =
      "0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::emergency::Disabled";
    dummy_field: Boolean;
  }

  export class Emergency {
    static TYPE_QNAME =
      "0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::emergency::Emergency";
    dummy_field: Boolean;
  }

  export interface DisableForeverPayload extends TypedEntryFunctionPayload<[]> {
    arguments_typed: [];
    type_arguments: [];
  }

  export interface PausePayload extends TypedEntryFunctionPayload<[]> {
    arguments_typed: [];
    type_arguments: [];
  }

  export interface ResumePayload extends TypedEntryFunctionPayload<[]> {
    arguments_typed: [];
    type_arguments: [];
  }

  export function loadTypes(_r: TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9","name":"emergency","friends":[],"exposed_functions":[{"name":"assert_no_emergency","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":[]},{"name":"disable_forever","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer"],"return":[]},{"name":"is_disabled","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":["bool"]},{"name":"is_emergency","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":["bool"]},{"name":"pause","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer"],"return":[]},{"name":"resume","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer"],"return":[]}],"structs":[{"name":"Disabled","is_native":false,"abilities":["key"],"generic_type_params":[],"fields":[{"name":"dummy_field","type":"bool"}]},{"name":"Emergency","is_native":false,"abilities":["key"],"generic_type_params":[],"fields":[{"name":"dummy_field","type":"bool"}]}]}'
  );
}

export class lp_account extends AptosBaseProcessor {
  constructor(options: AptosBindOptions) {
    super("lp_account", options);
  }
  static DEFAULT_OPTIONS: AptosBindOptions = {
    address:
      "0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9",
    network: AptosNetwork.TEST_NET,
  };

  static bind(options: Partial<AptosBindOptions> = {}): lp_account {
    return new lp_account({ ...lp_account.DEFAULT_OPTIONS, ...options });
  }

  onEntryInitializeLpAccount(
    func: (
      call: lp_account.InitializeLpAccountPayload,
      ctx: AptosContext
    ) => void,
    filter?: CallFilter,
    fetchConfig?: AptosFetchConfig
  ): lp_account {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "lp_account::initialize_lp_account",
      },
      fetchConfig
    );
    return this;
  }

  loadTypesInternal(registry: TypeRegistry) {
    loadAllTypes(registry);
  }
}

export namespace lp_account {
  export class CapabilityStorage {
    static TYPE_QNAME =
      "0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::lp_account::CapabilityStorage";
    signer_cap: _0x1.account.SignerCapability;
  }

  export interface InitializeLpAccountPayload
    extends TypedEntryFunctionPayload<[string, string]> {
    arguments_typed: [string, string];
    type_arguments: [];
  }

  export function loadTypes(_r: TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9","name":"lp_account","friends":[],"exposed_functions":[{"name":"initialize_lp_account","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer","vector<u8>","vector<u8>"],"return":[]},{"name":"retrieve_signer_cap","visibility":"public","is_entry":false,"generic_type_params":[],"params":["&signer"],"return":["0x1::account::SignerCapability"]}],"structs":[{"name":"CapabilityStorage","is_native":false,"abilities":["key"],"generic_type_params":[],"fields":[{"name":"signer_cap","type":"0x1::account::SignerCapability"}]}]}'
  );
}

export namespace coin_helper {
  export function loadTypes(_r: TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9","name":"coin_helper","friends":[],"exposed_functions":[{"name":"assert_is_coin","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":[],"return":[]},{"name":"compare","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":[],"return":["0x1::comparator::Result"]},{"name":"generate_lp_name_and_symbol","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":[],"return":["0x1::string::String","0x1::string::String"]},{"name":"is_sorted","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":[],"return":["bool"]},{"name":"supply","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":[],"return":["u128"]}],"structs":[]}'
  );
}

export class dao_storage extends AptosBaseProcessor {
  constructor(options: AptosBindOptions) {
    super("dao_storage", options);
  }
  static DEFAULT_OPTIONS: AptosBindOptions = {
    address:
      "0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9",
    network: AptosNetwork.TEST_NET,
  };

  static bind(options: Partial<AptosBindOptions> = {}): dao_storage {
    return new dao_storage({ ...dao_storage.DEFAULT_OPTIONS, ...options });
  }

  onEventStorageCreatedEvent(
    func: (
      event: dao_storage.StorageCreatedEventInstance,
      ctx: AptosContext
    ) => void,
    fetchConfig?: AptosFetchConfig
  ): dao_storage {
    this.onEvent(
      func,
      {
        type: "dao_storage::StorageCreatedEvent",
      },
      fetchConfig
    );
    return this;
  }

  onEventCoinDepositedEvent(
    func: (
      event: dao_storage.CoinDepositedEventInstance,
      ctx: AptosContext
    ) => void,
    fetchConfig?: AptosFetchConfig
  ): dao_storage {
    this.onEvent(
      func,
      {
        type: "dao_storage::CoinDepositedEvent",
      },
      fetchConfig
    );
    return this;
  }

  onEventCoinWithdrawnEvent(
    func: (
      event: dao_storage.CoinWithdrawnEventInstance,
      ctx: AptosContext
    ) => void,
    fetchConfig?: AptosFetchConfig
  ): dao_storage {
    this.onEvent(
      func,
      {
        type: "dao_storage::CoinWithdrawnEvent",
      },
      fetchConfig
    );
    return this;
  }

  loadTypesInternal(registry: TypeRegistry) {
    loadAllTypes(registry);
  }
}

export namespace dao_storage {
  export class CoinDepositedEvent<T0, T1, T2> {
    static TYPE_QNAME =
      "0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::dao_storage::CoinDepositedEvent";
    x_val: bigint;
    y_val: bigint;
  }

  export interface CoinDepositedEventInstance
    extends TypedEventInstance<CoinDepositedEvent<any, any, any>> {
    data_typed: CoinDepositedEvent<any, any, any>;
    type_arguments: [string, string, string];
  }

  export class CoinWithdrawnEvent<T0, T1, T2> {
    static TYPE_QNAME =
      "0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::dao_storage::CoinWithdrawnEvent";
    x_val: bigint;
    y_val: bigint;
  }

  export interface CoinWithdrawnEventInstance
    extends TypedEventInstance<CoinWithdrawnEvent<any, any, any>> {
    data_typed: CoinWithdrawnEvent<any, any, any>;
    type_arguments: [string, string, string];
  }

  export class EventsStore<T0, T1, T2> {
    static TYPE_QNAME =
      "0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::dao_storage::EventsStore";
    storage_registered_handle: _0x1.event.EventHandle<
      dao_storage.StorageCreatedEvent<T0, T1, T2>
    >;
    coin_deposited_handle: _0x1.event.EventHandle<
      dao_storage.CoinDepositedEvent<T0, T1, T2>
    >;
    coin_withdrawn_handle: _0x1.event.EventHandle<
      dao_storage.CoinWithdrawnEvent<T0, T1, T2>
    >;
  }

  export class Storage<T0, T1, T2> {
    static TYPE_QNAME =
      "0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::dao_storage::Storage";
    coin_x: _0x1.coin.Coin<T0>;
    coin_y: _0x1.coin.Coin<T1>;
  }

  export class StorageCreatedEvent<T0, T1, T2> {
    static TYPE_QNAME =
      "0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::dao_storage::StorageCreatedEvent";
    dummy_field: Boolean;
  }

  export interface StorageCreatedEventInstance
    extends TypedEventInstance<StorageCreatedEvent<any, any, any>> {
    data_typed: StorageCreatedEvent<any, any, any>;
    type_arguments: [string, string, string];
  }

  export function loadTypes(_r: TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9","name":"dao_storage","friends":["0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::liquidity_pool"],"exposed_functions":[{"name":"deposit","visibility":"friend","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["address","0x1::coin::Coin<T0>","0x1::coin::Coin<T1>"],"return":[]},{"name":"register","visibility":"friend","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["&signer"],"return":[]},{"name":"withdraw","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["&signer","address","u64","u64"],"return":["0x1::coin::Coin<T0>","0x1::coin::Coin<T1>"]}],"structs":[{"name":"CoinDepositedEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"fields":[{"name":"x_val","type":"u64"},{"name":"y_val","type":"u64"}]},{"name":"CoinWithdrawnEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"fields":[{"name":"x_val","type":"u64"},{"name":"y_val","type":"u64"}]},{"name":"EventsStore","is_native":false,"abilities":["key"],"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"fields":[{"name":"storage_registered_handle","type":"0x1::event::EventHandle<0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::dao_storage::StorageCreatedEvent<T0, T1, T2>>"},{"name":"coin_deposited_handle","type":"0x1::event::EventHandle<0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::dao_storage::CoinDepositedEvent<T0, T1, T2>>"},{"name":"coin_withdrawn_handle","type":"0x1::event::EventHandle<0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::dao_storage::CoinWithdrawnEvent<T0, T1, T2>>"}]},{"name":"Storage","is_native":false,"abilities":["key"],"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"fields":[{"name":"coin_x","type":"0x1::coin::Coin<T0>"},{"name":"coin_y","type":"0x1::coin::Coin<T1>"}]},{"name":"StorageCreatedEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"fields":[{"name":"dummy_field","type":"bool"}]}]}'
  );
}

export namespace stable_curve {
  export function loadTypes(_r: TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9","name":"stable_curve","friends":[],"exposed_functions":[{"name":"coin_in","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u128","u64","u64","u128","u128"],"return":["u128"]},{"name":"coin_out","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u128","u64","u64","u128","u128"],"return":["u128"]},{"name":"lp_value","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u128","u64","u128","u64"],"return":["0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::u256::U256"]}],"structs":[]}'
  );
}

export class liquidity_pool extends AptosBaseProcessor {
  constructor(options: AptosBindOptions) {
    super("liquidity_pool", options);
  }
  static DEFAULT_OPTIONS: AptosBindOptions = {
    address:
      "0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9",
    network: AptosNetwork.TEST_NET,
  };

  static bind(options: Partial<AptosBindOptions> = {}): liquidity_pool {
    return new liquidity_pool({
      ...liquidity_pool.DEFAULT_OPTIONS,
      ...options,
    });
  }

  onEntryInitialize(
    func: (call: liquidity_pool.InitializePayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: AptosFetchConfig
  ): liquidity_pool {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "liquidity_pool::initialize",
      },
      fetchConfig
    );
    return this;
  }

  onEventPoolCreatedEvent(
    func: (
      event: liquidity_pool.PoolCreatedEventInstance,
      ctx: AptosContext
    ) => void,
    fetchConfig?: AptosFetchConfig
  ): liquidity_pool {
    this.onEvent(
      func,
      {
        type: "liquidity_pool::PoolCreatedEvent",
      },
      fetchConfig
    );
    return this;
  }

  onEventLiquidityAddedEvent(
    func: (
      event: liquidity_pool.LiquidityAddedEventInstance,
      ctx: AptosContext
    ) => void,
    fetchConfig?: AptosFetchConfig
  ): liquidity_pool {
    this.onEvent(
      func,
      {
        type: "liquidity_pool::LiquidityAddedEvent",
      },
      fetchConfig
    );
    return this;
  }

  onEventLiquidityRemovedEvent(
    func: (
      event: liquidity_pool.LiquidityRemovedEventInstance,
      ctx: AptosContext
    ) => void,
    fetchConfig?: AptosFetchConfig
  ): liquidity_pool {
    this.onEvent(
      func,
      {
        type: "liquidity_pool::LiquidityRemovedEvent",
      },
      fetchConfig
    );
    return this;
  }

  onEventSwapEvent(
    func: (event: liquidity_pool.SwapEventInstance, ctx: AptosContext) => void,
    fetchConfig?: AptosFetchConfig
  ): liquidity_pool {
    this.onEvent(
      func,
      {
        type: "liquidity_pool::SwapEvent",
      },
      fetchConfig
    );
    return this;
  }

  onEventOracleUpdatedEvent(
    func: (
      event: liquidity_pool.OracleUpdatedEventInstance,
      ctx: AptosContext
    ) => void,
    fetchConfig?: AptosFetchConfig
  ): liquidity_pool {
    this.onEvent(
      func,
      {
        type: "liquidity_pool::OracleUpdatedEvent",
      },
      fetchConfig
    );
    return this;
  }

  loadTypesInternal(registry: TypeRegistry) {
    loadAllTypes(registry);
  }
}

export namespace liquidity_pool {
  export class EventsStore<T0, T1, T2> {
    static TYPE_QNAME =
      "0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::liquidity_pool::EventsStore";
    pool_created_handle: _0x1.event.EventHandle<
      liquidity_pool.PoolCreatedEvent<T0, T1, T2>
    >;
    liquidity_added_handle: _0x1.event.EventHandle<
      liquidity_pool.LiquidityAddedEvent<T0, T1, T2>
    >;
    liquidity_removed_handle: _0x1.event.EventHandle<
      liquidity_pool.LiquidityRemovedEvent<T0, T1, T2>
    >;
    swap_handle: _0x1.event.EventHandle<liquidity_pool.SwapEvent<T0, T1, T2>>;
    oracle_updated_handle: _0x1.event.EventHandle<
      liquidity_pool.OracleUpdatedEvent<T0, T1, T2>
    >;
  }

  export class LiquidityAddedEvent<T0, T1, T2> {
    static TYPE_QNAME =
      "0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::liquidity_pool::LiquidityAddedEvent";
    added_x_val: bigint;
    added_y_val: bigint;
    lp_tokens_received: bigint;
  }

  export interface LiquidityAddedEventInstance
    extends TypedEventInstance<LiquidityAddedEvent<any, any, any>> {
    data_typed: LiquidityAddedEvent<any, any, any>;
    type_arguments: [string, string, string];
  }

  export class LiquidityPool<T0, T1, T2> {
    static TYPE_QNAME =
      "0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::liquidity_pool::LiquidityPool";
    coin_x_reserve: _0x1.coin.Coin<T0>;
    coin_y_reserve: _0x1.coin.Coin<T1>;
    last_block_timestamp: bigint;
    last_price_x_cumulative: bigint;
    last_price_y_cumulative: bigint;
    lp_mint_cap: _0x1.coin.MintCapability<
      _0x385068db10693e06512ed54b1e6e8f1fb9945bb7a78c28a45585939ce953f99e.lp_coin.LP<
        T0,
        T1,
        T2
      >
    >;
    lp_burn_cap: _0x1.coin.BurnCapability<
      _0x385068db10693e06512ed54b1e6e8f1fb9945bb7a78c28a45585939ce953f99e.lp_coin.LP<
        T0,
        T1,
        T2
      >
    >;
    x_scale: bigint;
    y_scale: bigint;
  }

  export class LiquidityRemovedEvent<T0, T1, T2> {
    static TYPE_QNAME =
      "0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::liquidity_pool::LiquidityRemovedEvent";
    returned_x_val: bigint;
    returned_y_val: bigint;
    lp_tokens_burned: bigint;
  }

  export interface LiquidityRemovedEventInstance
    extends TypedEventInstance<LiquidityRemovedEvent<any, any, any>> {
    data_typed: LiquidityRemovedEvent<any, any, any>;
    type_arguments: [string, string, string];
  }

  export class OracleUpdatedEvent<T0, T1, T2> {
    static TYPE_QNAME =
      "0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::liquidity_pool::OracleUpdatedEvent";
    last_price_x_cumulative: bigint;
    last_price_y_cumulative: bigint;
  }

  export interface OracleUpdatedEventInstance
    extends TypedEventInstance<OracleUpdatedEvent<any, any, any>> {
    data_typed: OracleUpdatedEvent<any, any, any>;
    type_arguments: [string, string, string];
  }

  export class PoolAccountCapability {
    static TYPE_QNAME =
      "0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::liquidity_pool::PoolAccountCapability";
    signer_cap: _0x1.account.SignerCapability;
  }

  export class PoolCreatedEvent<T0, T1, T2> {
    static TYPE_QNAME =
      "0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::liquidity_pool::PoolCreatedEvent";
    creator: Address;
  }

  export interface PoolCreatedEventInstance
    extends TypedEventInstance<PoolCreatedEvent<any, any, any>> {
    data_typed: PoolCreatedEvent<any, any, any>;
    type_arguments: [string, string, string];
  }

  export class SwapEvent<T0, T1, T2> {
    static TYPE_QNAME =
      "0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::liquidity_pool::SwapEvent";
    x_in: bigint;
    x_out: bigint;
    y_in: bigint;
    y_out: bigint;
  }

  export interface SwapEventInstance
    extends TypedEventInstance<SwapEvent<any, any, any>> {
    data_typed: SwapEvent<any, any, any>;
    type_arguments: [string, string, string];
  }

  export interface InitializePayload extends TypedEntryFunctionPayload<[]> {
    arguments_typed: [];
    type_arguments: [];
  }

  export function loadTypes(_r: TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9","name":"liquidity_pool","friends":[],"exposed_functions":[{"name":"burn","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["0x1::coin::Coin<0x385068db10693e06512ed54b1e6e8f1fb9945bb7a78c28a45585939ce953f99e::lp_coin::LP<T0, T1, T2>>"],"return":["0x1::coin::Coin<T0>","0x1::coin::Coin<T1>"]},{"name":"get_cumulative_prices","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":[],"return":["u128","u128","u64"]},{"name":"get_decimals_scales","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":[],"return":["u64","u64"]},{"name":"get_fees_config","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":["u64","u64"]},{"name":"get_reserves_size","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":[],"return":["u64","u64"]},{"name":"initialize","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer"],"return":[]},{"name":"is_pool_exists","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":[],"return":["bool"]},{"name":"mint","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["0x1::coin::Coin<T0>","0x1::coin::Coin<T1>"],"return":["0x1::coin::Coin<0x385068db10693e06512ed54b1e6e8f1fb9945bb7a78c28a45585939ce953f99e::lp_coin::LP<T0, T1, T2>>"]},{"name":"register","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["&signer"],"return":[]},{"name":"swap","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["0x1::coin::Coin<T0>","u64","0x1::coin::Coin<T1>","u64"],"return":["0x1::coin::Coin<T0>","0x1::coin::Coin<T1>"]}],"structs":[{"name":"EventsStore","is_native":false,"abilities":["key"],"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"fields":[{"name":"pool_created_handle","type":"0x1::event::EventHandle<0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::liquidity_pool::PoolCreatedEvent<T0, T1, T2>>"},{"name":"liquidity_added_handle","type":"0x1::event::EventHandle<0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::liquidity_pool::LiquidityAddedEvent<T0, T1, T2>>"},{"name":"liquidity_removed_handle","type":"0x1::event::EventHandle<0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::liquidity_pool::LiquidityRemovedEvent<T0, T1, T2>>"},{"name":"swap_handle","type":"0x1::event::EventHandle<0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::liquidity_pool::SwapEvent<T0, T1, T2>>"},{"name":"oracle_updated_handle","type":"0x1::event::EventHandle<0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::liquidity_pool::OracleUpdatedEvent<T0, T1, T2>>"}]},{"name":"LiquidityAddedEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"fields":[{"name":"added_x_val","type":"u64"},{"name":"added_y_val","type":"u64"},{"name":"lp_tokens_received","type":"u64"}]},{"name":"LiquidityPool","is_native":false,"abilities":["key"],"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"fields":[{"name":"coin_x_reserve","type":"0x1::coin::Coin<T0>"},{"name":"coin_y_reserve","type":"0x1::coin::Coin<T1>"},{"name":"last_block_timestamp","type":"u64"},{"name":"last_price_x_cumulative","type":"u128"},{"name":"last_price_y_cumulative","type":"u128"},{"name":"lp_mint_cap","type":"0x1::coin::MintCapability<0x385068db10693e06512ed54b1e6e8f1fb9945bb7a78c28a45585939ce953f99e::lp_coin::LP<T0, T1, T2>>"},{"name":"lp_burn_cap","type":"0x1::coin::BurnCapability<0x385068db10693e06512ed54b1e6e8f1fb9945bb7a78c28a45585939ce953f99e::lp_coin::LP<T0, T1, T2>>"},{"name":"x_scale","type":"u64"},{"name":"y_scale","type":"u64"}]},{"name":"LiquidityRemovedEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"fields":[{"name":"returned_x_val","type":"u64"},{"name":"returned_y_val","type":"u64"},{"name":"lp_tokens_burned","type":"u64"}]},{"name":"OracleUpdatedEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"fields":[{"name":"last_price_x_cumulative","type":"u128"},{"name":"last_price_y_cumulative","type":"u128"}]},{"name":"PoolAccountCapability","is_native":false,"abilities":["key"],"generic_type_params":[],"fields":[{"name":"signer_cap","type":"0x1::account::SignerCapability"}]},{"name":"PoolCreatedEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"fields":[{"name":"creator","type":"address"}]},{"name":"SwapEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"fields":[{"name":"x_in","type":"u64"},{"name":"x_out","type":"u64"},{"name":"y_in","type":"u64"},{"name":"y_out","type":"u64"}]}]}'
  );
}

export function loadAllTypes(_r: TypeRegistry) {
  _0x1.loadAllTypes(_r);
  _0x385068db10693e06512ed54b1e6e8f1fb9945bb7a78c28a45585939ce953f99e.loadAllTypes(
    _r
  );

  _r.load(math.ABI);
  _r.load(u256.ABI);
  _r.load(coins.ABI);
  _r.load(curves.ABI);
  _r.load(faucet.ABI);
  _r.load(router.ABI);
  _r.load(scripts.ABI);
  _r.load(uq64x64.ABI);
  _r.load(emergency.ABI);
  _r.load(lp_account.ABI);
  _r.load(coin_helper.ABI);
  _r.load(dao_storage.ABI);
  _r.load(stable_curve.ABI);
  _r.load(liquidity_pool.ABI);
}
