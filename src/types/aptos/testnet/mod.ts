/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

/* Generated modules for account 0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b */

import { CallFilter } from "@sentio/sdk/move";
import {
  MoveCoder,
  AptosBindOptions,
  AptosBaseProcessor,
  TypedEventInstance,
  AptosNetwork,
  TypedEntryFunctionPayload,
  AptosContext,
} from "@sentio/sdk/aptos";
import { MoveFetchConfig } from "@sentio/protos";
import { Address, MoveModule } from "@sentio/sdk/aptos";

import { _0x1 } from "@sentio/sdk/aptos/builtin";
import * as _0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8 from "./0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8.js";

export namespace fees {
  export function loadTypes(_r: MoveCoder) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b","name":"fees","friends":["0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::collateral_auction","0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::init","0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::stability_pool","0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::vault"],"exposed_functions":[{"name":"absorb_fee","visibility":"friend","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["0x1::coin::Coin<T0>"],"return":[]},{"name":"balance","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":[],"return":["u64"]},{"name":"withdraw_fee","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64"],"return":["0x1::coin::Coin<T0>"]}],"structs":[]}'
  );
}

export class init extends AptosBaseProcessor {
  constructor(options: AptosBindOptions) {
    super("init", options);
  }
  static DEFAULT_OPTIONS: AptosBindOptions = {
    address:
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b",
    network: AptosNetwork.TEST_NET,
  };

  static bind(options: Partial<AptosBindOptions> = {}): init {
    return new init({ ...init.DEFAULT_OPTIONS, ...options });
  }

  onEntryInitialize(
    func: (call: init.InitializePayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): init {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "init::initialize",
      },
      fetchConfig
    );
    return this;
  }

  onEntryInitializeCollateral(
    func: (call: init.InitializeCollateralPayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): init {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "init::initialize_collateral",
      },
      fetchConfig
    );
    return this;
  }

  loadTypesInternal(registry: MoveCoder) {
    loadAllTypes(registry);
  }
}

export namespace init {
  export interface InitializePayload extends TypedEntryFunctionPayload<[]> {
    arguments_decoded: [];
    type_arguments: [];
  }

  export interface InitializeCollateralPayload<T0 = any>
    extends TypedEntryFunctionPayload<[bigint, bigint]> {
    arguments_decoded: [bigint, bigint];
    type_arguments: [string];
  }

  export function loadTypes(_r: MoveCoder) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b","name":"init","friends":[],"exposed_functions":[{"name":"initialize","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer"],"return":[]},{"name":"initialize_collateral","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64","u64"],"return":[]}],"structs":[]}'
  );
}

export namespace math {
  export function loadTypes(_r: MoveCoder) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b","name":"math","friends":[],"exposed_functions":[{"name":"absolute_diff","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u128","u128"],"return":["u128"]},{"name":"adjust_decimals","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u64","u8","u8"],"return":["u64"]},{"name":"compute_nominal_cr","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u64","u64"],"return":["u128"]},{"name":"exp","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u64","u8"],"return":["u64"]},{"name":"fp_from_bps","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u64"],"return":["0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8::fixed_point64::FixedPoint64"]},{"name":"fp_to_bps","visibility":"public","is_entry":false,"generic_type_params":[],"params":["0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8::fixed_point64::FixedPoint64"],"return":["u64"]},{"name":"max_u128","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":["u128"]},{"name":"min","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u64","u64"],"return":["u64"]},{"name":"pow10","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u64"],"return":["u64"]}],"structs":[]}'
  );
}

export class vault extends AptosBaseProcessor {
  constructor(options: AptosBindOptions) {
    super("vault", options);
  }
  static DEFAULT_OPTIONS: AptosBindOptions = {
    address:
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b",
    network: AptosNetwork.TEST_NET,
  };

  static bind(options: Partial<AptosBindOptions> = {}): vault {
    return new vault({ ...vault.DEFAULT_OPTIONS, ...options });
  }

  onEntrySetBorrowFeeBps(
    func: (call: vault.SetBorrowFeeBpsPayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): vault {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "vault::set_borrow_fee_bps",
      },
      fetchConfig
    );
    return this;
  }

  onEntrySetFreezeCollateral(
    func: (call: vault.SetFreezeCollateralPayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): vault {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "vault::set_freeze_collateral",
      },
      fetchConfig
    );
    return this;
  }

  onEntrySetFreezeLiquidations(
    func: (call: vault.SetFreezeLiquidationsPayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): vault {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "vault::set_freeze_liquidations",
      },
      fetchConfig
    );
    return this;
  }

  onEntrySetInterestAprBps(
    func: (call: vault.SetInterestAprBpsPayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): vault {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "vault::set_interest_apr_bps",
      },
      fetchConfig
    );
    return this;
  }

  onEntrySetLiquidationFeeBps(
    func: (call: vault.SetLiquidationFeeBpsPayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): vault {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "vault::set_liquidation_fee_bps",
      },
      fetchConfig
    );
    return this;
  }

  onEntrySetLiquidatorBonusBps(
    func: (call: vault.SetLiquidatorBonusBpsPayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): vault {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "vault::set_liquidator_bonus_bps",
      },
      fetchConfig
    );
    return this;
  }

  onEntrySetLiquidatorBonusCapModAmount(
    func: (
      call: vault.SetLiquidatorBonusCapModAmountPayload,
      ctx: AptosContext
    ) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): vault {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "vault::set_liquidator_bonus_cap_mod_amount",
      },
      fetchConfig
    );
    return this;
  }

  onEntrySetMcrBps(
    func: (call: vault.SetMcrBpsPayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): vault {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "vault::set_mcr_bps",
      },
      fetchConfig
    );
    return this;
  }

  onEntrySetMcrPenaltyMultiplier(
    func: (
      call: vault.SetMcrPenaltyMultiplierPayload,
      ctx: AptosContext
    ) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): vault {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "vault::set_mcr_penalty_multiplier",
      },
      fetchConfig
    );
    return this;
  }

  onEntrySetMinLiabilityAmount(
    func: (call: vault.SetMinLiabilityAmountPayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): vault {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "vault::set_min_liability_amount",
      },
      fetchConfig
    );
    return this;
  }

  onEntrySetMintCap(
    func: (call: vault.SetMintCapPayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): vault {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "vault::set_mint_cap",
      },
      fetchConfig
    );
    return this;
  }

  onEntrySetRedemptionFeeBps(
    func: (call: vault.SetRedemptionFeeBpsPayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): vault {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "vault::set_redemption_fee_bps",
      },
      fetchConfig
    );
    return this;
  }

  onEntrySetRedemptionMode(
    func: (call: vault.SetRedemptionModePayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): vault {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "vault::set_redemption_mode",
      },
      fetchConfig
    );
    return this;
  }

  onEventVaultCollateralParamChangeEvent(
    func: (
      event: vault.VaultCollateralParamChangeEventInstance,
      ctx: AptosContext
    ) => void,
    fetchConfig?: MoveFetchConfig
  ): vault {
    this.onEvent(
      func,
      {
        type: "vault::VaultCollateralParamChangeEvent",
      },
      fetchConfig
    );
    return this;
  }

  onEventBorrowEvent(
    func: (event: vault.BorrowEventInstance, ctx: AptosContext) => void,
    fetchConfig?: MoveFetchConfig
  ): vault {
    this.onEvent(
      func,
      {
        type: "vault::BorrowEvent",
      },
      fetchConfig
    );
    return this;
  }

  onEventRepayEvent(
    func: (event: vault.RepayEventInstance, ctx: AptosContext) => void,
    fetchConfig?: MoveFetchConfig
  ): vault {
    this.onEvent(
      func,
      {
        type: "vault::RepayEvent",
      },
      fetchConfig
    );
    return this;
  }

  onEventDepositEvent(
    func: (event: vault.DepositEventInstance, ctx: AptosContext) => void,
    fetchConfig?: MoveFetchConfig
  ): vault {
    this.onEvent(
      func,
      {
        type: "vault::DepositEvent",
      },
      fetchConfig
    );
    return this;
  }

  onEventWithdrawEvent(
    func: (event: vault.WithdrawEventInstance, ctx: AptosContext) => void,
    fetchConfig?: MoveFetchConfig
  ): vault {
    this.onEvent(
      func,
      {
        type: "vault::WithdrawEvent",
      },
      fetchConfig
    );
    return this;
  }

  onEventLiquidationEvent(
    func: (event: vault.LiquidationEventInstance, ctx: AptosContext) => void,
    fetchConfig?: MoveFetchConfig
  ): vault {
    this.onEvent(
      func,
      {
        type: "vault::LiquidationEvent",
      },
      fetchConfig
    );
    return this;
  }

  onEventRedemptionEvent(
    func: (event: vault.RedemptionEventInstance, ctx: AptosContext) => void,
    fetchConfig?: MoveFetchConfig
  ): vault {
    this.onEvent(
      func,
      {
        type: "vault::RedemptionEvent",
      },
      fetchConfig
    );
    return this;
  }

  onEventVaultUpdatedEvent(
    func: (event: vault.VaultUpdatedEventInstance, ctx: AptosContext) => void,
    fetchConfig?: MoveFetchConfig
  ): vault {
    this.onEvent(
      func,
      {
        type: "vault::VaultUpdatedEvent",
      },
      fetchConfig
    );
    return this;
  }

  onEventVaultParamChangeEvent(
    func: (
      event: vault.VaultParamChangeEventInstance,
      ctx: AptosContext
    ) => void,
    fetchConfig?: MoveFetchConfig
  ): vault {
    this.onEvent(
      func,
      {
        type: "vault::VaultParamChangeEvent",
      },
      fetchConfig
    );
    return this;
  }

  loadTypesInternal(registry: MoveCoder) {
    loadAllTypes(registry);
  }
}

export namespace vault {
  export class BorrowEvent<T0> {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::vault::BorrowEvent";
    amount: bigint;
    fee: bigint;
  }

  export interface BorrowEventInstance
    extends TypedEventInstance<BorrowEvent<any>> {
    data_decoded: BorrowEvent<any>;
    type_arguments: [string];
  }

  export class DepositEvent<T0> {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::vault::DepositEvent";
    amount: bigint;
  }

  export interface DepositEventInstance
    extends TypedEventInstance<DepositEvent<any>> {
    data_decoded: DepositEvent<any>;
    type_arguments: [string];
  }

  export class LiquidationEvent<T0> {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::vault::LiquidationEvent";
    vault_address: Address;
    collateral_penalty: bigint;
    liquidator_bonus: bigint;
    liquidation_fee: bigint;
    stability_pool_repayment: _0x1.option.Option<vault.StabilityPoolRepayment>;
    collateral_auction_id: _0x1.option.Option<bigint>;
  }

  export interface LiquidationEventInstance
    extends TypedEventInstance<LiquidationEvent<any>> {
    data_decoded: LiquidationEvent<any>;
    type_arguments: [string];
  }

  export class RedemptionEvent<T0> {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::vault::RedemptionEvent";
    vault_address: Address;
    collateral_amount: bigint;
    mod_amount: bigint;
  }

  export interface RedemptionEventInstance
    extends TypedEventInstance<RedemptionEvent<any>> {
    data_decoded: RedemptionEvent<any>;
    type_arguments: [string];
  }

  export class RepayEvent<T0> {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::vault::RepayEvent";
    amount: bigint;
    interest_amount: bigint;
  }

  export interface RepayEventInstance
    extends TypedEventInstance<RepayEvent<any>> {
    data_decoded: RepayEvent<any>;
    type_arguments: [string];
  }

  export class StabilityPoolRepayment {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::vault::StabilityPoolRepayment";
    collateral_award_amount: bigint;
    mod_repayment_amount: bigint;
  }

  export class Vault<T0> {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::vault::Vault";
    collateral: _0x1.coin.Coin<T0>;
    debt: bigint;
    interest: bigint;
    last_interest_index: _0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8.fixed_point64.FixedPoint64;
    events: vault.VaultEvents<T0>;
  }

  export class VaultCollateralParamChangeEvent<T0> {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::vault::VaultCollateralParamChangeEvent";
    name: string;
    prev_value: bigint;
    new_value: bigint;
  }

  export interface VaultCollateralParamChangeEventInstance
    extends TypedEventInstance<VaultCollateralParamChangeEvent<any>> {
    data_decoded: VaultCollateralParamChangeEvent<any>;
    type_arguments: [string];
  }

  export class VaultCollateralParams<T0> {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::vault::VaultCollateralParams";
    mint_cap: bigint;
    mcr_ratio: _0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8.fixed_point64.FixedPoint64;
    redemption_fee_ratio: _0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8.fixed_point64.FixedPoint64;
    redemption_mode_enabled: Boolean;
    collateral_frozen: Boolean;
    liquidations_frozen: Boolean;
    mcr_penalty_multiplier: bigint;
    global_rate_index_ratio: _0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8.fixed_point64.FixedPoint64;
    global_last_interest_update_seconds: bigint;
    interest_apr_ratio: _0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8.fixed_point64.FixedPoint64;
    param_change_event: _0x1.event.EventHandle<
      vault.VaultCollateralParamChangeEvent<T0>
    >;
  }

  export class VaultEvents<T0> {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::vault::VaultEvents";
    borrow_events: _0x1.event.EventHandle<vault.BorrowEvent<T0>>;
    repay_events: _0x1.event.EventHandle<vault.RepayEvent<T0>>;
    deposit_events: _0x1.event.EventHandle<vault.DepositEvent<T0>>;
    withdraw_events: _0x1.event.EventHandle<vault.WithdrawEvent<T0>>;
    liquidation_events: _0x1.event.EventHandle<vault.LiquidationEvent<T0>>;
    redemption_events: _0x1.event.EventHandle<vault.RedemptionEvent<T0>>;
    vault_updated_events: _0x1.event.EventHandle<vault.VaultUpdatedEvent<T0>>;
  }

  export class VaultParamChangeEvent {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::vault::VaultParamChangeEvent";
    name: string;
    prev_value: bigint;
    new_value: bigint;
  }

  export interface VaultParamChangeEventInstance
    extends TypedEventInstance<VaultParamChangeEvent> {
    data_decoded: VaultParamChangeEvent;
    type_arguments: [];
  }

  export class VaultParams {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::vault::VaultParams";
    borrow_fee_ratio: _0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8.fixed_point64.FixedPoint64;
    liquidation_fee_ratio: _0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8.fixed_point64.FixedPoint64;
    liquidator_bonus_ratio: _0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8.fixed_point64.FixedPoint64;
    liquidator_bonus_cap_mod_amount: bigint;
    min_liability_amount: bigint;
    param_change_event: _0x1.event.EventHandle<vault.VaultParamChangeEvent>;
  }

  export class VaultUpdatedEvent<T0> {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::vault::VaultUpdatedEvent";
    vault_address: Address;
    collateral: bigint;
    liability: bigint;
  }

  export interface VaultUpdatedEventInstance
    extends TypedEventInstance<VaultUpdatedEvent<any>> {
    data_decoded: VaultUpdatedEvent<any>;
    type_arguments: [string];
  }

  export class Vaults<T0> {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::vault::Vaults";
    total_collateral: bigint;
    total_liability: bigint;
    sorted_vaults: sorted_vaults.SortedVaults;
  }

  export class WithdrawEvent<T0> {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::vault::WithdrawEvent";
    amount: bigint;
  }

  export interface WithdrawEventInstance
    extends TypedEventInstance<WithdrawEvent<any>> {
    data_decoded: WithdrawEvent<any>;
    type_arguments: [string];
  }

  export interface SetBorrowFeeBpsPayload
    extends TypedEntryFunctionPayload<[bigint]> {
    arguments_decoded: [bigint];
    type_arguments: [];
  }

  export interface SetFreezeCollateralPayload<T0 = any>
    extends TypedEntryFunctionPayload<[Boolean]> {
    arguments_decoded: [Boolean];
    type_arguments: [string];
  }

  export interface SetFreezeLiquidationsPayload<T0 = any>
    extends TypedEntryFunctionPayload<[Boolean]> {
    arguments_decoded: [Boolean];
    type_arguments: [string];
  }

  export interface SetInterestAprBpsPayload<T0 = any>
    extends TypedEntryFunctionPayload<[bigint]> {
    arguments_decoded: [bigint];
    type_arguments: [string];
  }

  export interface SetLiquidationFeeBpsPayload
    extends TypedEntryFunctionPayload<[bigint]> {
    arguments_decoded: [bigint];
    type_arguments: [];
  }

  export interface SetLiquidatorBonusBpsPayload
    extends TypedEntryFunctionPayload<[bigint]> {
    arguments_decoded: [bigint];
    type_arguments: [];
  }

  export interface SetLiquidatorBonusCapModAmountPayload
    extends TypedEntryFunctionPayload<[bigint]> {
    arguments_decoded: [bigint];
    type_arguments: [];
  }

  export interface SetMcrBpsPayload<T0 = any>
    extends TypedEntryFunctionPayload<[bigint]> {
    arguments_decoded: [bigint];
    type_arguments: [string];
  }

  export interface SetMcrPenaltyMultiplierPayload<T0 = any>
    extends TypedEntryFunctionPayload<[bigint]> {
    arguments_decoded: [bigint];
    type_arguments: [string];
  }

  export interface SetMinLiabilityAmountPayload
    extends TypedEntryFunctionPayload<[bigint]> {
    arguments_decoded: [bigint];
    type_arguments: [];
  }

  export interface SetMintCapPayload<T0 = any>
    extends TypedEntryFunctionPayload<[bigint]> {
    arguments_decoded: [bigint];
    type_arguments: [string];
  }

  export interface SetRedemptionFeeBpsPayload<T0 = any>
    extends TypedEntryFunctionPayload<[bigint]> {
    arguments_decoded: [bigint];
    type_arguments: [string];
  }

  export interface SetRedemptionModePayload<T0 = any>
    extends TypedEntryFunctionPayload<[Boolean]> {
    arguments_decoded: [Boolean];
    type_arguments: [string];
  }

  export function loadTypes(_r: MoveCoder) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b","name":"vault","friends":["0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::init"],"exposed_functions":[{"name":"account_collateral_and_liability_amounts","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["address"],"return":["u64","u64"]},{"name":"account_interest_amount","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["address"],"return":["u64"]},{"name":"borrow","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64","0x1::option::Option<address>"],"return":["0x1::coin::Coin<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::mod_coin::MOD>"]},{"name":"borrow_fee_ratio","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":["0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8::fixed_point64::FixedPoint64"]},{"name":"deposit_collateral","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&signer","0x1::coin::Coin<T0>","0x1::option::Option<address>"],"return":[]},{"name":"initialize","visibility":"friend","is_entry":false,"generic_type_params":[],"params":[],"return":[]},{"name":"initialize_collateral","visibility":"friend","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["u64","u64"],"return":[]},{"name":"initialized","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":["bool"]},{"name":"initialized_collateral","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":[],"return":["bool"]},{"name":"interest_apr_ratio","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":[],"return":["0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8::fixed_point64::FixedPoint64"]},{"name":"liquidate","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["address","0x1::option::Option<address>"],"return":["0x1::coin::Coin<T0>"]},{"name":"liquidation_fee_ratio","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":["0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8::fixed_point64::FixedPoint64"]},{"name":"liquidator_bonus_cap_mod_amount","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":["u64"]},{"name":"liquidator_bonus_ratio","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":["0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8::fixed_point64::FixedPoint64"]},{"name":"minimal_collateral_ratio","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":[],"return":["0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8::fixed_point64::FixedPoint64"]},{"name":"minimal_liability_amount","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":["u64"]},{"name":"mint_cap","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":[],"return":["u64"]},{"name":"open_vault","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&signer","0x1::coin::Coin<T0>","u64","0x1::option::Option<address>"],"return":["0x1::coin::Coin<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::mod_coin::MOD>"]},{"name":"redeem_collateral","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["0x1::coin::Coin<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::mod_coin::MOD>"],"return":["0x1::coin::Coin<T0>","0x1::coin::Coin<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::mod_coin::MOD>"]},{"name":"redemption_mode_enabled","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":[],"return":["bool"]},{"name":"repay","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&signer","0x1::coin::Coin<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::mod_coin::MOD>","0x1::option::Option<address>"],"return":[]},{"name":"set_borrow_fee_bps","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer","u64"],"return":[]},{"name":"set_freeze_collateral","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","bool"],"return":[]},{"name":"set_freeze_liquidations","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","bool"],"return":[]},{"name":"set_interest_apr_bps","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64"],"return":[]},{"name":"set_liquidation_fee_bps","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer","u64"],"return":[]},{"name":"set_liquidator_bonus_bps","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer","u64"],"return":[]},{"name":"set_liquidator_bonus_cap_mod_amount","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer","u64"],"return":[]},{"name":"set_mcr_bps","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64"],"return":[]},{"name":"set_mcr_penalty_multiplier","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64"],"return":[]},{"name":"set_min_liability_amount","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer","u64"],"return":[]},{"name":"set_mint_cap","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64"],"return":[]},{"name":"set_redemption_fee_bps","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64"],"return":[]},{"name":"set_redemption_mode","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","bool"],"return":[]},{"name":"total_collateral_and_liability_amount","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":[],"return":["u64","u64"]},{"name":"undercollateralization_penalty_multiplier","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":[],"return":["u64"]},{"name":"withdraw_collateral","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64","0x1::option::Option<address>"],"return":["0x1::coin::Coin<T0>"]}],"structs":[{"name":"BorrowEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"amount","type":"u64"},{"name":"fee","type":"u64"}]},{"name":"DepositEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"amount","type":"u64"}]},{"name":"LiquidationEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"vault_address","type":"address"},{"name":"collateral_penalty","type":"u64"},{"name":"liquidator_bonus","type":"u64"},{"name":"liquidation_fee","type":"u64"},{"name":"stability_pool_repayment","type":"0x1::option::Option<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::vault::StabilityPoolRepayment>"},{"name":"collateral_auction_id","type":"0x1::option::Option<u64>"}]},{"name":"RedemptionEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"vault_address","type":"address"},{"name":"collateral_amount","type":"u64"},{"name":"mod_amount","type":"u64"}]},{"name":"RepayEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"amount","type":"u64"},{"name":"interest_amount","type":"u64"}]},{"name":"StabilityPoolRepayment","is_native":false,"abilities":["drop","store"],"generic_type_params":[],"fields":[{"name":"collateral_award_amount","type":"u64"},{"name":"mod_repayment_amount","type":"u64"}]},{"name":"Vault","is_native":false,"abilities":["key"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"collateral","type":"0x1::coin::Coin<T0>"},{"name":"debt","type":"u64"},{"name":"interest","type":"u64"},{"name":"last_interest_index","type":"0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8::fixed_point64::FixedPoint64"},{"name":"events","type":"0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::vault::VaultEvents<T0>"}]},{"name":"VaultCollateralParamChangeEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"name","type":"0x1::string::String"},{"name":"prev_value","type":"u64"},{"name":"new_value","type":"u64"}]},{"name":"VaultCollateralParams","is_native":false,"abilities":["key"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"mint_cap","type":"u64"},{"name":"mcr_ratio","type":"0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8::fixed_point64::FixedPoint64"},{"name":"redemption_fee_ratio","type":"0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8::fixed_point64::FixedPoint64"},{"name":"redemption_mode_enabled","type":"bool"},{"name":"collateral_frozen","type":"bool"},{"name":"liquidations_frozen","type":"bool"},{"name":"mcr_penalty_multiplier","type":"u64"},{"name":"global_rate_index_ratio","type":"0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8::fixed_point64::FixedPoint64"},{"name":"global_last_interest_update_seconds","type":"u64"},{"name":"interest_apr_ratio","type":"0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8::fixed_point64::FixedPoint64"},{"name":"param_change_event","type":"0x1::event::EventHandle<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::vault::VaultCollateralParamChangeEvent<T0>>"}]},{"name":"VaultEvents","is_native":false,"abilities":["store"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"borrow_events","type":"0x1::event::EventHandle<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::vault::BorrowEvent<T0>>"},{"name":"repay_events","type":"0x1::event::EventHandle<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::vault::RepayEvent<T0>>"},{"name":"deposit_events","type":"0x1::event::EventHandle<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::vault::DepositEvent<T0>>"},{"name":"withdraw_events","type":"0x1::event::EventHandle<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::vault::WithdrawEvent<T0>>"},{"name":"liquidation_events","type":"0x1::event::EventHandle<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::vault::LiquidationEvent<T0>>"},{"name":"redemption_events","type":"0x1::event::EventHandle<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::vault::RedemptionEvent<T0>>"},{"name":"vault_updated_events","type":"0x1::event::EventHandle<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::vault::VaultUpdatedEvent<T0>>"}]},{"name":"VaultParamChangeEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[],"fields":[{"name":"name","type":"0x1::string::String"},{"name":"prev_value","type":"u64"},{"name":"new_value","type":"u64"}]},{"name":"VaultParams","is_native":false,"abilities":["key"],"generic_type_params":[],"fields":[{"name":"borrow_fee_ratio","type":"0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8::fixed_point64::FixedPoint64"},{"name":"liquidation_fee_ratio","type":"0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8::fixed_point64::FixedPoint64"},{"name":"liquidator_bonus_ratio","type":"0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8::fixed_point64::FixedPoint64"},{"name":"liquidator_bonus_cap_mod_amount","type":"u64"},{"name":"min_liability_amount","type":"u64"},{"name":"param_change_event","type":"0x1::event::EventHandle<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::vault::VaultParamChangeEvent>"}]},{"name":"VaultUpdatedEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"vault_address","type":"address"},{"name":"collateral","type":"u64"},{"name":"liability","type":"u64"}]},{"name":"Vaults","is_native":false,"abilities":["key"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"total_collateral","type":"u64"},{"name":"total_liability","type":"u64"},{"name":"sorted_vaults","type":"0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::sorted_vaults::SortedVaults"}]},{"name":"WithdrawEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"amount","type":"u64"}]}]}'
  );
}

export namespace tables {
  export function loadTypes(_r: MoveCoder) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b","name":"tables","friends":[],"exposed_functions":[{"name":"borrow_with_default","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":["copy","drop"]},{"constraints":[]}],"params":["&0x1::table::Table<T0, T1>","T0","&T1"],"return":["&T1"]}],"structs":[]}'
  );
}

export class package_ extends AptosBaseProcessor {
  constructor(options: AptosBindOptions) {
    super("package", options);
  }
  static DEFAULT_OPTIONS: AptosBindOptions = {
    address:
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b",
    network: AptosNetwork.TEST_NET,
  };

  static bind(options: Partial<AptosBindOptions> = {}): package_ {
    return new package_({ ...package_.DEFAULT_OPTIONS, ...options });
  }

  onEntryPublishPackage(
    func: (call: package_.PublishPackagePayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): package_ {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "package::publish_package",
      },
      fetchConfig
    );
    return this;
  }

  loadTypesInternal(registry: MoveCoder) {
    loadAllTypes(registry);
  }
}

export namespace package_ {
  export class ResourceSignerCapability {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::package::ResourceSignerCapability";
    signer_cap: _0x1.account.SignerCapability;
  }

  export interface PublishPackagePayload
    extends TypedEntryFunctionPayload<[string, string[]]> {
    arguments_decoded: [string, string[]];
    type_arguments: [];
  }

  export function loadTypes(_r: MoveCoder) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b","name":"package","friends":["0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::collateral_auction","0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::fees","0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::mod_coin","0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::stability_pool","0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::vault"],"exposed_functions":[{"name":"initialized","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":["bool"]},{"name":"publish_package","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer","vector<u8>","vector<vector<u8>>"],"return":[]},{"name":"resource_account_address","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":["address"]},{"name":"resource_account_deployer_address","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":["address"]},{"name":"resource_account_signer","visibility":"friend","is_entry":false,"generic_type_params":[],"params":[],"return":["signer"]}],"structs":[{"name":"ResourceSignerCapability","is_native":false,"abilities":["key"],"generic_type_params":[],"fields":[{"name":"signer_cap","type":"0x1::account::SignerCapability"}]}]}'
  );
}

export namespace vectors {
  export function loadTypes(_r: MoveCoder) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b","name":"vectors","friends":[],"exposed_functions":[{"name":"to_option","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":["copy"]}],"params":["&vector<T0>"],"return":["0x1::option::Option<T0>"]},{"name":"zeros","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u64"],"return":["vector<u64>"]}],"structs":[]}'
  );
}

export namespace mod_coin {
  export class Capabilities {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::mod_coin::Capabilities";
    burn_capability: _0x1.coin.BurnCapability<mod_coin.MOD>;
    freeze_capability: _0x1.coin.FreezeCapability<mod_coin.MOD>;
    mint_capability: _0x1.coin.MintCapability<mod_coin.MOD>;
  }

  export class MOD {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::mod_coin::MOD";
    dummy_field: Boolean;
  }

  export function loadTypes(_r: MoveCoder) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b","name":"mod_coin","friends":["0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::collateral_auction","0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::init","0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::vault"],"exposed_functions":[{"name":"burn","visibility":"friend","is_entry":false,"generic_type_params":[],"params":["0x1::coin::Coin<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::mod_coin::MOD>"],"return":[]},{"name":"initialize","visibility":"friend","is_entry":false,"generic_type_params":[],"params":[],"return":[]},{"name":"initialized","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":["bool"]},{"name":"mint","visibility":"friend","is_entry":false,"generic_type_params":[],"params":["u64"],"return":["0x1::coin::Coin<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::mod_coin::MOD>"]}],"structs":[{"name":"Capabilities","is_native":false,"abilities":["key"],"generic_type_params":[],"fields":[{"name":"burn_capability","type":"0x1::coin::BurnCapability<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::mod_coin::MOD>"},{"name":"freeze_capability","type":"0x1::coin::FreezeCapability<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::mod_coin::MOD>"},{"name":"mint_capability","type":"0x1::coin::MintCapability<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::mod_coin::MOD>"}]},{"name":"MOD","is_native":false,"abilities":[],"generic_type_params":[],"fields":[{"name":"dummy_field","type":"bool"}]}]}'
  );
}

export class fees_scripts extends AptosBaseProcessor {
  constructor(options: AptosBindOptions) {
    super("fees_scripts", options);
  }
  static DEFAULT_OPTIONS: AptosBindOptions = {
    address:
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b",
    network: AptosNetwork.TEST_NET,
  };

  static bind(options: Partial<AptosBindOptions> = {}): fees_scripts {
    return new fees_scripts({ ...fees_scripts.DEFAULT_OPTIONS, ...options });
  }

  onEntryTransferFee(
    func: (call: fees_scripts.TransferFeePayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): fees_scripts {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "fees_scripts::transfer_fee",
      },
      fetchConfig
    );
    return this;
  }

  loadTypesInternal(registry: MoveCoder) {
    loadAllTypes(registry);
  }
}

export namespace fees_scripts {
  export interface TransferFeePayload<T0 = any>
    extends TypedEntryFunctionPayload<[Address, bigint]> {
    arguments_decoded: [Address, bigint];
    type_arguments: [string];
  }

  export function loadTypes(_r: MoveCoder) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b","name":"fees_scripts","friends":[],"exposed_functions":[{"name":"transfer_fee","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","address","u64"],"return":[]}],"structs":[]}'
  );
}

export namespace sorted_vaults {
  export class Node {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::sorted_vaults::Node";
    nominal_cr: bigint;
    next: Address;
    prev: Address;
  }

  export class SortedVaults {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::sorted_vaults::SortedVaults";
    head_sentinel: Address;
    tail_sentinel: Address;
    nodes: _0x1.table_with_length.TableWithLength<Address, sorted_vaults.Node>;
  }

  export function loadTypes(_r: MoveCoder) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b","name":"sorted_vaults","friends":["0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::vault"],"exposed_functions":[{"name":"insert","visibility":"friend","is_entry":false,"generic_type_params":[],"params":["&mut 0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::sorted_vaults::SortedVaults","address","u128","0x1::option::Option<address>"],"return":[]},{"name":"lowest_nicr_address","visibility":"friend","is_entry":false,"generic_type_params":[],"params":["&0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::sorted_vaults::SortedVaults"],"return":["0x1::option::Option<address>"]},{"name":"new","visibility":"friend","is_entry":false,"generic_type_params":[],"params":[],"return":["0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::sorted_vaults::SortedVaults"]},{"name":"next_higher_nicr_address","visibility":"friend","is_entry":false,"generic_type_params":[],"params":["&0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::sorted_vaults::SortedVaults","address"],"return":["0x1::option::Option<address>"]},{"name":"remove","visibility":"friend","is_entry":false,"generic_type_params":[],"params":["&mut 0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::sorted_vaults::SortedVaults","address"],"return":[]}],"structs":[{"name":"Node","is_native":false,"abilities":["drop","store"],"generic_type_params":[],"fields":[{"name":"nominal_cr","type":"u128"},{"name":"next","type":"address"},{"name":"prev","type":"address"}]},{"name":"SortedVaults","is_native":false,"abilities":["store"],"generic_type_params":[],"fields":[{"name":"head_sentinel","type":"address"},{"name":"tail_sentinel","type":"address"},{"name":"nodes","type":"0x1::table_with_length::TableWithLength<address, 0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::sorted_vaults::Node>"}]}]}'
  );
}

export class vault_scripts extends AptosBaseProcessor {
  constructor(options: AptosBindOptions) {
    super("vault_scripts", options);
  }
  static DEFAULT_OPTIONS: AptosBindOptions = {
    address:
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b",
    network: AptosNetwork.TEST_NET,
  };

  static bind(options: Partial<AptosBindOptions> = {}): vault_scripts {
    return new vault_scripts({ ...vault_scripts.DEFAULT_OPTIONS, ...options });
  }

  onEntryBorrow(
    func: (call: vault_scripts.BorrowPayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): vault_scripts {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "vault_scripts::borrow",
      },
      fetchConfig
    );
    return this;
  }

  onEntryCloseVault(
    func: (call: vault_scripts.CloseVaultPayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): vault_scripts {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "vault_scripts::close_vault",
      },
      fetchConfig
    );
    return this;
  }

  onEntryDepositCollateral(
    func: (
      call: vault_scripts.DepositCollateralPayload,
      ctx: AptosContext
    ) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): vault_scripts {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "vault_scripts::deposit_collateral",
      },
      fetchConfig
    );
    return this;
  }

  onEntryLiquidate(
    func: (call: vault_scripts.LiquidatePayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): vault_scripts {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "vault_scripts::liquidate",
      },
      fetchConfig
    );
    return this;
  }

  onEntryOpenVault(
    func: (call: vault_scripts.OpenVaultPayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): vault_scripts {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "vault_scripts::open_vault",
      },
      fetchConfig
    );
    return this;
  }

  onEntryRedeemCollateral(
    func: (
      call: vault_scripts.RedeemCollateralPayload,
      ctx: AptosContext
    ) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): vault_scripts {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "vault_scripts::redeem_collateral",
      },
      fetchConfig
    );
    return this;
  }

  onEntryRepay(
    func: (call: vault_scripts.RepayPayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): vault_scripts {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "vault_scripts::repay",
      },
      fetchConfig
    );
    return this;
  }

  onEntryWithdrawCollateral(
    func: (
      call: vault_scripts.WithdrawCollateralPayload,
      ctx: AptosContext
    ) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): vault_scripts {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "vault_scripts::withdraw_collateral",
      },
      fetchConfig
    );
    return this;
  }

  loadTypesInternal(registry: MoveCoder) {
    loadAllTypes(registry);
  }
}

export namespace vault_scripts {
  export interface BorrowPayload<T0 = any>
    extends TypedEntryFunctionPayload<[bigint, Address[]]> {
    arguments_decoded: [bigint, Address[]];
    type_arguments: [string];
  }

  export interface CloseVaultPayload<T0 = any>
    extends TypedEntryFunctionPayload<[]> {
    arguments_decoded: [];
    type_arguments: [string];
  }

  export interface DepositCollateralPayload<T0 = any>
    extends TypedEntryFunctionPayload<[bigint, Address[]]> {
    arguments_decoded: [bigint, Address[]];
    type_arguments: [string];
  }

  export interface LiquidatePayload<T0 = any>
    extends TypedEntryFunctionPayload<[Address, Address[]]> {
    arguments_decoded: [Address, Address[]];
    type_arguments: [string];
  }

  export interface OpenVaultPayload<T0 = any>
    extends TypedEntryFunctionPayload<[bigint, bigint, Address[]]> {
    arguments_decoded: [bigint, bigint, Address[]];
    type_arguments: [string];
  }

  export interface RedeemCollateralPayload<T0 = any>
    extends TypedEntryFunctionPayload<[bigint]> {
    arguments_decoded: [bigint];
    type_arguments: [string];
  }

  export interface RepayPayload<T0 = any>
    extends TypedEntryFunctionPayload<[bigint, Address[]]> {
    arguments_decoded: [bigint, Address[]];
    type_arguments: [string];
  }

  export interface WithdrawCollateralPayload<T0 = any>
    extends TypedEntryFunctionPayload<[bigint, Address[]]> {
    arguments_decoded: [bigint, Address[]];
    type_arguments: [string];
  }

  export function loadTypes(_r: MoveCoder) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b","name":"vault_scripts","friends":[],"exposed_functions":[{"name":"borrow","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64","vector<address>"],"return":[]},{"name":"close_vault","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer"],"return":[]},{"name":"deposit_collateral","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64","vector<address>"],"return":[]},{"name":"liquidate","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","address","vector<address>"],"return":[]},{"name":"open_vault","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64","u64","vector<address>"],"return":[]},{"name":"redeem_collateral","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64"],"return":[]},{"name":"repay","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64","vector<address>"],"return":[]},{"name":"withdraw_collateral","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64","vector<address>"],"return":[]}],"structs":[]}'
  );
}

export class stability_pool extends AptosBaseProcessor {
  constructor(options: AptosBindOptions) {
    super("stability_pool", options);
  }
  static DEFAULT_OPTIONS: AptosBindOptions = {
    address:
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b",
    network: AptosNetwork.TEST_NET,
  };

  static bind(options: Partial<AptosBindOptions> = {}): stability_pool {
    return new stability_pool({
      ...stability_pool.DEFAULT_OPTIONS,
      ...options,
    });
  }

  onEntryAddToRwaWhitelist(
    func: (
      call: stability_pool.AddToRwaWhitelistPayload,
      ctx: AptosContext
    ) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): stability_pool {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "stability_pool::add_to_rwa_whitelist",
      },
      fetchConfig
    );
    return this;
  }

  onEntryRemoveFromRwaWhitelist(
    func: (
      call: stability_pool.RemoveFromRwaWhitelistPayload,
      ctx: AptosContext
    ) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): stability_pool {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "stability_pool::remove_from_rwa_whitelist",
      },
      fetchConfig
    );
    return this;
  }

  onEntrySetWithdrawalFeeMaxBps(
    func: (
      call: stability_pool.SetWithdrawalFeeMaxBpsPayload,
      ctx: AptosContext
    ) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): stability_pool {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "stability_pool::set_withdrawal_fee_max_bps",
      },
      fetchConfig
    );
    return this;
  }

  onEntrySetWithdrawalFeePeriodSeconds(
    func: (
      call: stability_pool.SetWithdrawalFeePeriodSecondsPayload,
      ctx: AptosContext
    ) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): stability_pool {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "stability_pool::set_withdrawal_fee_period_seconds",
      },
      fetchConfig
    );
    return this;
  }

  onEventDepositEvent(
    func: (
      event: stability_pool.DepositEventInstance,
      ctx: AptosContext
    ) => void,
    fetchConfig?: MoveFetchConfig
  ): stability_pool {
    this.onEvent(
      func,
      {
        type: "stability_pool::DepositEvent",
      },
      fetchConfig
    );
    return this;
  }

  onEventWithdrawEvent(
    func: (
      event: stability_pool.WithdrawEventInstance,
      ctx: AptosContext
    ) => void,
    fetchConfig?: MoveFetchConfig
  ): stability_pool {
    this.onEvent(
      func,
      {
        type: "stability_pool::WithdrawEvent",
      },
      fetchConfig
    );
    return this;
  }

  onEventDebtAbsorptionEvent(
    func: (
      event: stability_pool.DebtAbsorptionEventInstance,
      ctx: AptosContext
    ) => void,
    fetchConfig?: MoveFetchConfig
  ): stability_pool {
    this.onEvent(
      func,
      {
        type: "stability_pool::DebtAbsorptionEvent",
      },
      fetchConfig
    );
    return this;
  }

  onEventDistributedCollateralEvent(
    func: (
      event: stability_pool.DistributedCollateralEventInstance,
      ctx: AptosContext
    ) => void,
    fetchConfig?: MoveFetchConfig
  ): stability_pool {
    this.onEvent(
      func,
      {
        type: "stability_pool::DistributedCollateralEvent",
      },
      fetchConfig
    );
    return this;
  }

  onEventStabilityPoolParamChangeEvent(
    func: (
      event: stability_pool.StabilityPoolParamChangeEventInstance,
      ctx: AptosContext
    ) => void,
    fetchConfig?: MoveFetchConfig
  ): stability_pool {
    this.onEvent(
      func,
      {
        type: "stability_pool::StabilityPoolParamChangeEvent",
      },
      fetchConfig
    );
    return this;
  }

  loadTypesInternal(registry: MoveCoder) {
    loadAllTypes(registry);
  }
}

export namespace stability_pool {
  export class Crypto {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::stability_pool::Crypto";
    dummy_field: Boolean;
  }

  export class DebtAbsorptionEvent<T0> {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::stability_pool::DebtAbsorptionEvent";
    amount: bigint;
    recipient: Address;
  }

  export interface DebtAbsorptionEventInstance
    extends TypedEventInstance<DebtAbsorptionEvent<any>> {
    data_decoded: DebtAbsorptionEvent<any>;
    type_arguments: [string];
  }

  export class DepositEvent<T0> {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::stability_pool::DepositEvent";
    depositor: Address;
    amount: bigint;
  }

  export interface DepositEventInstance
    extends TypedEventInstance<DepositEvent<any>> {
    data_decoded: DepositEvent<any>;
    type_arguments: [string];
  }

  export class DistributedCollateral<T0> {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::stability_pool::DistributedCollateral";
    collateral: _0x1.coin.Coin<T0>;
  }

  export class DistributedCollateralEvent<T0> {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::stability_pool::DistributedCollateralEvent";
    depositor: Address;
    amount: bigint;
    coin_address: Address;
  }

  export interface DistributedCollateralEventInstance
    extends TypedEventInstance<DistributedCollateralEvent<any>> {
    data_decoded: DistributedCollateralEvent<any>;
    type_arguments: [string];
  }

  export class RWA {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::stability_pool::RWA";
    dummy_field: Boolean;
  }

  export class StabilityPool<T0> {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::stability_pool::StabilityPool";
    stability: _0x1.coin.Coin<mod_coin.MOD>;
    reward_distributor: reward_distributor.RewardDistributor;
    deposit_timestamps: _0x1.table.Table<Address, bigint>;
    events: stability_pool.StabilityPoolEvents<T0>;
  }

  export class StabilityPoolEvents<T0> {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::stability_pool::StabilityPoolEvents";
    deposit_events: _0x1.event.EventHandle<stability_pool.DepositEvent<T0>>;
    withdraw_events: _0x1.event.EventHandle<stability_pool.WithdrawEvent<T0>>;
    debt_absorption_events: _0x1.event.EventHandle<
      stability_pool.DebtAbsorptionEvent<T0>
    >;
    distributed_collateral_events: _0x1.event.EventHandle<
      stability_pool.DistributedCollateralEvent<T0>
    >;
  }

  export class StabilityPoolParamChangeEvent<T0> {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::stability_pool::StabilityPoolParamChangeEvent";
    name: string;
    prev_value: bigint;
    new_value: bigint;
  }

  export interface StabilityPoolParamChangeEventInstance
    extends TypedEventInstance<StabilityPoolParamChangeEvent<any>> {
    data_decoded: StabilityPoolParamChangeEvent<any>;
    type_arguments: [string];
  }

  export class StabilityPoolParams<T0> {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::stability_pool::StabilityPoolParams";
    withdrawal_fee_period_seconds: bigint;
    withdrawal_fee_max_ratio: _0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8.fixed_point64.FixedPoint64;
    param_change_event: _0x1.event.EventHandle<
      stability_pool.StabilityPoolParamChangeEvent<T0>
    >;
  }

  export class Whitelist<T0> {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::stability_pool::Whitelist";
    members: _0x1.table.Table<Address, Boolean>;
  }

  export class WithdrawEvent<T0> {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::stability_pool::WithdrawEvent";
    depositor: Address;
    amount: bigint;
  }

  export interface WithdrawEventInstance
    extends TypedEventInstance<WithdrawEvent<any>> {
    data_decoded: WithdrawEvent<any>;
    type_arguments: [string];
  }

  export interface AddToRwaWhitelistPayload
    extends TypedEntryFunctionPayload<[Address]> {
    arguments_decoded: [Address];
    type_arguments: [];
  }

  export interface RemoveFromRwaWhitelistPayload
    extends TypedEntryFunctionPayload<[Address]> {
    arguments_decoded: [Address];
    type_arguments: [];
  }

  export interface SetWithdrawalFeeMaxBpsPayload<T0 = any>
    extends TypedEntryFunctionPayload<[bigint]> {
    arguments_decoded: [bigint];
    type_arguments: [string];
  }

  export interface SetWithdrawalFeePeriodSecondsPayload<T0 = any>
    extends TypedEntryFunctionPayload<[bigint]> {
    arguments_decoded: [bigint];
    type_arguments: [string];
  }

  export function loadTypes(_r: MoveCoder) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b","name":"stability_pool","friends":["0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::init","0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::vault"],"exposed_functions":[{"name":"account_deposit","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["address"],"return":["u64"]},{"name":"add_to_rwa_whitelist","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer","address"],"return":[]},{"name":"claim_collateral","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&signer"],"return":["0x1::coin::Coin<T0>"]},{"name":"claimable_collateral","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["address"],"return":["u64"]},{"name":"deposit_mod","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&signer","0x1::coin::Coin<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::mod_coin::MOD>"],"return":[]},{"name":"distribute_collateral_and_request_mod","visibility":"friend","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["address","u64","0x1::coin::Coin<T0>"],"return":["0x1::coin::Coin<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::mod_coin::MOD>"]},{"name":"initialize","visibility":"friend","is_entry":false,"generic_type_params":[],"params":[],"return":[]},{"name":"initialize_collateral","visibility":"friend","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":[],"return":[]},{"name":"initialized","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":["bool"]},{"name":"initialized_collateral","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":[],"return":["bool"]},{"name":"is_rwa_asset","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":[],"return":["bool"]},{"name":"is_rwa_cointype","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":[],"return":["bool"]},{"name":"remove_from_rwa_whitelist","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer","address"],"return":[]},{"name":"set_withdrawal_fee_max_bps","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64"],"return":[]},{"name":"set_withdrawal_fee_period_seconds","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64"],"return":[]},{"name":"total_distributed_collateral","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":[],"return":["u64"]},{"name":"total_mod_deposit","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":[],"return":["u64"]},{"name":"withdraw_mod","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64"],"return":["0x1::coin::Coin<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::mod_coin::MOD>"]}],"structs":[{"name":"Crypto","is_native":false,"abilities":[],"generic_type_params":[],"fields":[{"name":"dummy_field","type":"bool"}]},{"name":"DebtAbsorptionEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"amount","type":"u64"},{"name":"recipient","type":"address"}]},{"name":"DepositEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"depositor","type":"address"},{"name":"amount","type":"u64"}]},{"name":"DistributedCollateral","is_native":false,"abilities":["key"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"collateral","type":"0x1::coin::Coin<T0>"}]},{"name":"DistributedCollateralEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"depositor","type":"address"},{"name":"amount","type":"u64"},{"name":"coin_address","type":"address"}]},{"name":"RWA","is_native":false,"abilities":[],"generic_type_params":[],"fields":[{"name":"dummy_field","type":"bool"}]},{"name":"StabilityPool","is_native":false,"abilities":["key"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"stability","type":"0x1::coin::Coin<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::mod_coin::MOD>"},{"name":"reward_distributor","type":"0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::reward_distributor::RewardDistributor"},{"name":"deposit_timestamps","type":"0x1::table::Table<address, u64>"},{"name":"events","type":"0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::stability_pool::StabilityPoolEvents<T0>"}]},{"name":"StabilityPoolEvents","is_native":false,"abilities":["store"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"deposit_events","type":"0x1::event::EventHandle<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::stability_pool::DepositEvent<T0>>"},{"name":"withdraw_events","type":"0x1::event::EventHandle<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::stability_pool::WithdrawEvent<T0>>"},{"name":"debt_absorption_events","type":"0x1::event::EventHandle<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::stability_pool::DebtAbsorptionEvent<T0>>"},{"name":"distributed_collateral_events","type":"0x1::event::EventHandle<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::stability_pool::DistributedCollateralEvent<T0>>"}]},{"name":"StabilityPoolParamChangeEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"name","type":"0x1::string::String"},{"name":"prev_value","type":"u64"},{"name":"new_value","type":"u64"}]},{"name":"StabilityPoolParams","is_native":false,"abilities":["key"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"withdrawal_fee_period_seconds","type":"u64"},{"name":"withdrawal_fee_max_ratio","type":"0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8::fixed_point64::FixedPoint64"},{"name":"param_change_event","type":"0x1::event::EventHandle<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::stability_pool::StabilityPoolParamChangeEvent<T0>>"}]},{"name":"Whitelist","is_native":false,"abilities":["store","key"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"members","type":"0x1::table::Table<address, bool>"}]},{"name":"WithdrawEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"depositor","type":"address"},{"name":"amount","type":"u64"}]}]}'
  );
}

export class collateral_auction extends AptosBaseProcessor {
  constructor(options: AptosBindOptions) {
    super("collateral_auction", options);
  }
  static DEFAULT_OPTIONS: AptosBindOptions = {
    address:
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b",
    network: AptosNetwork.TEST_NET,
  };

  static bind(options: Partial<AptosBindOptions> = {}): collateral_auction {
    return new collateral_auction({
      ...collateral_auction.DEFAULT_OPTIONS,
      ...options,
    });
  }

  onEntryReset(
    func: (call: collateral_auction.ResetPayload, ctx: AptosContext) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): collateral_auction {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "collateral_auction::reset",
      },
      fetchConfig
    );
    return this;
  }

  onEventCollateralAuctionStartEvent(
    func: (
      event: collateral_auction.CollateralAuctionStartEventInstance,
      ctx: AptosContext
    ) => void,
    fetchConfig?: MoveFetchConfig
  ): collateral_auction {
    this.onEvent(
      func,
      {
        type: "collateral_auction::CollateralAuctionStartEvent",
      },
      fetchConfig
    );
    return this;
  }

  onEventCollateralAuctionBidEvent(
    func: (
      event: collateral_auction.CollateralAuctionBidEventInstance,
      ctx: AptosContext
    ) => void,
    fetchConfig?: MoveFetchConfig
  ): collateral_auction {
    this.onEvent(
      func,
      {
        type: "collateral_auction::CollateralAuctionBidEvent",
      },
      fetchConfig
    );
    return this;
  }

  onEventCollateralAuctionEndEvent(
    func: (
      event: collateral_auction.CollateralAuctionEndEventInstance,
      ctx: AptosContext
    ) => void,
    fetchConfig?: MoveFetchConfig
  ): collateral_auction {
    this.onEvent(
      func,
      {
        type: "collateral_auction::CollateralAuctionEndEvent",
      },
      fetchConfig
    );
    return this;
  }

  onEventCollateralAuctionRepayEvent(
    func: (
      event: collateral_auction.CollateralAuctionRepayEventInstance,
      ctx: AptosContext
    ) => void,
    fetchConfig?: MoveFetchConfig
  ): collateral_auction {
    this.onEvent(
      func,
      {
        type: "collateral_auction::CollateralAuctionRepayEvent",
      },
      fetchConfig
    );
    return this;
  }

  onEventCollateralAuctionBadDebtEvent(
    func: (
      event: collateral_auction.CollateralAuctionBadDebtEventInstance,
      ctx: AptosContext
    ) => void,
    fetchConfig?: MoveFetchConfig
  ): collateral_auction {
    this.onEvent(
      func,
      {
        type: "collateral_auction::CollateralAuctionBadDebtEvent",
      },
      fetchConfig
    );
    return this;
  }

  onEventCollateralAuctionParamChangeEvent(
    func: (
      event: collateral_auction.CollateralAuctionParamChangeEventInstance,
      ctx: AptosContext
    ) => void,
    fetchConfig?: MoveFetchConfig
  ): collateral_auction {
    this.onEvent(
      func,
      {
        type: "collateral_auction::CollateralAuctionParamChangeEvent",
      },
      fetchConfig
    );
    return this;
  }

  loadTypesInternal(registry: MoveCoder) {
    loadAllTypes(registry);
  }
}

export namespace collateral_auction {
  export class CollateralAuction<T0> {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::collateral_auction::CollateralAuction";
    target_debt: bigint;
    collateral: _0x1.coin.Coin<T0>;
    start_time_seconds: bigint;
    start_price: _0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8.fixed_point64.FixedPoint64;
  }

  export class CollateralAuctionBadDebtEvent<T0> {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::collateral_auction::CollateralAuctionBadDebtEvent";
    id: bigint;
    debt: bigint;
  }

  export interface CollateralAuctionBadDebtEventInstance
    extends TypedEventInstance<CollateralAuctionBadDebtEvent<any>> {
    data_decoded: CollateralAuctionBadDebtEvent<any>;
    type_arguments: [string];
  }

  export class CollateralAuctionBidEvent<T0> {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::collateral_auction::CollateralAuctionBidEvent";
    id: bigint;
    mod_amount: bigint;
    collateral_amount: bigint;
  }

  export interface CollateralAuctionBidEventInstance
    extends TypedEventInstance<CollateralAuctionBidEvent<any>> {
    data_decoded: CollateralAuctionBidEvent<any>;
    type_arguments: [string];
  }

  export class CollateralAuctionEndEvent<T0> {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::collateral_auction::CollateralAuctionEndEvent";
    id: bigint;
    leftover_collateral_amount: bigint;
  }

  export interface CollateralAuctionEndEventInstance
    extends TypedEventInstance<CollateralAuctionEndEvent<any>> {
    data_decoded: CollateralAuctionEndEvent<any>;
    type_arguments: [string];
  }

  export class CollateralAuctionEvents<T0> {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::collateral_auction::CollateralAuctionEvents";
    auction_start_events: _0x1.event.EventHandle<
      collateral_auction.CollateralAuctionStartEvent<T0>
    >;
    auction_bid_events: _0x1.event.EventHandle<
      collateral_auction.CollateralAuctionBidEvent<T0>
    >;
    auction_end_events: _0x1.event.EventHandle<
      collateral_auction.CollateralAuctionEndEvent<T0>
    >;
    auction_repay_events: _0x1.event.EventHandle<
      collateral_auction.CollateralAuctionRepayEvent<T0>
    >;
    auction_bad_debt_events: _0x1.event.EventHandle<
      collateral_auction.CollateralAuctionBadDebtEvent<T0>
    >;
  }

  export class CollateralAuctionParamChangeEvent<T0> {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::collateral_auction::CollateralAuctionParamChangeEvent";
    name: string;
    prev_value: bigint;
    new_value: bigint;
  }

  export interface CollateralAuctionParamChangeEventInstance
    extends TypedEventInstance<CollateralAuctionParamChangeEvent<any>> {
    data_decoded: CollateralAuctionParamChangeEvent<any>;
    type_arguments: [string];
  }

  export class CollateralAuctionParams<T0> {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::collateral_auction::CollateralAuctionParams";
    expiry_time_seconds: bigint;
    start_price_increase_ratio: _0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8.fixed_point64.FixedPoint64;
    reserve_ratio: _0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8.fixed_point64.FixedPoint64;
    param_change_event: _0x1.event.EventHandle<
      collateral_auction.CollateralAuctionParamChangeEvent<T0>
    >;
  }

  export class CollateralAuctionRepayEvent<T0> {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::collateral_auction::CollateralAuctionRepayEvent";
    id: bigint;
    mod_amount: bigint;
  }

  export interface CollateralAuctionRepayEventInstance
    extends TypedEventInstance<CollateralAuctionRepayEvent<any>> {
    data_decoded: CollateralAuctionRepayEvent<any>;
    type_arguments: [string];
  }

  export class CollateralAuctionStartEvent<T0> {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::collateral_auction::CollateralAuctionStartEvent";
    id: bigint;
    collateral_amount: bigint;
    target_debt: bigint;
  }

  export interface CollateralAuctionStartEventInstance
    extends TypedEventInstance<CollateralAuctionStartEvent<any>> {
    data_decoded: CollateralAuctionStartEvent<any>;
    type_arguments: [string];
  }

  export class CollateralAuctions<T0> {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::collateral_auction::CollateralAuctions";
    next_auction_id: bigint;
    auctions: _0x1.table.Table<
      bigint,
      collateral_auction.CollateralAuction<T0>
    >;
    live_auctions: _0x1.table.Table<bigint, Boolean>;
    bad_auctions: _0x1.table.Table<bigint, Boolean>;
    events: collateral_auction.CollateralAuctionEvents<T0>;
  }

  export interface ResetPayload<T0 = any>
    extends TypedEntryFunctionPayload<[bigint]> {
    arguments_decoded: [bigint];
    type_arguments: [string];
  }

  export function loadTypes(_r: MoveCoder) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b","name":"collateral_auction","friends":["0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::init","0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::vault"],"exposed_functions":[{"name":"auction_collateral_amount","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["u64"],"return":["u64"]},{"name":"auction_target_debt_amount","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["u64"],"return":["u64"]},{"name":"bad_auction_debt_amount","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["u64"],"return":["u64"]},{"name":"bid","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["u64","0x1::coin::Coin<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::mod_coin::MOD>"],"return":["0x1::coin::Coin<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::mod_coin::MOD>","0x1::coin::Coin<T0>"]},{"name":"current_price","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["u64"],"return":["0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8::fixed_point64::FixedPoint64"]},{"name":"initialize_collateral","visibility":"friend","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":[],"return":[]},{"name":"initialized_collateral","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":[],"return":["bool"]},{"name":"is_bad_auction","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["u64"],"return":["bool"]},{"name":"is_live_auction","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["u64"],"return":["bool"]},{"name":"next_auction_id","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":[],"return":["u64"]},{"name":"repay_debt","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["u64","0x1::coin::Coin<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::mod_coin::MOD>"],"return":["0x1::coin::Coin<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::mod_coin::MOD>"]},{"name":"reset","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["u64"],"return":[]},{"name":"set_expiry_time_seconds","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64"],"return":[]},{"name":"set_reserve_ratio_bps","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64"],"return":[]},{"name":"set_start_price_increase_bps","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64"],"return":[]},{"name":"start_collateral_auction","visibility":"friend","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["u64","0x1::coin::Coin<T0>"],"return":["u64"]}],"structs":[{"name":"CollateralAuction","is_native":false,"abilities":["store"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"target_debt","type":"u64"},{"name":"collateral","type":"0x1::coin::Coin<T0>"},{"name":"start_time_seconds","type":"u64"},{"name":"start_price","type":"0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8::fixed_point64::FixedPoint64"}]},{"name":"CollateralAuctionBadDebtEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"id","type":"u64"},{"name":"debt","type":"u64"}]},{"name":"CollateralAuctionBidEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"id","type":"u64"},{"name":"mod_amount","type":"u64"},{"name":"collateral_amount","type":"u64"}]},{"name":"CollateralAuctionEndEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"id","type":"u64"},{"name":"leftover_collateral_amount","type":"u64"}]},{"name":"CollateralAuctionEvents","is_native":false,"abilities":["store"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"auction_start_events","type":"0x1::event::EventHandle<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::collateral_auction::CollateralAuctionStartEvent<T0>>"},{"name":"auction_bid_events","type":"0x1::event::EventHandle<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::collateral_auction::CollateralAuctionBidEvent<T0>>"},{"name":"auction_end_events","type":"0x1::event::EventHandle<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::collateral_auction::CollateralAuctionEndEvent<T0>>"},{"name":"auction_repay_events","type":"0x1::event::EventHandle<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::collateral_auction::CollateralAuctionRepayEvent<T0>>"},{"name":"auction_bad_debt_events","type":"0x1::event::EventHandle<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::collateral_auction::CollateralAuctionBadDebtEvent<T0>>"}]},{"name":"CollateralAuctionParamChangeEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"name","type":"0x1::string::String"},{"name":"prev_value","type":"u64"},{"name":"new_value","type":"u64"}]},{"name":"CollateralAuctionParams","is_native":false,"abilities":["key"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"expiry_time_seconds","type":"u64"},{"name":"start_price_increase_ratio","type":"0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8::fixed_point64::FixedPoint64"},{"name":"reserve_ratio","type":"0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8::fixed_point64::FixedPoint64"},{"name":"param_change_event","type":"0x1::event::EventHandle<0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::collateral_auction::CollateralAuctionParamChangeEvent<T0>>"}]},{"name":"CollateralAuctionRepayEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"id","type":"u64"},{"name":"mod_amount","type":"u64"}]},{"name":"CollateralAuctionStartEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"id","type":"u64"},{"name":"collateral_amount","type":"u64"},{"name":"target_debt","type":"u64"}]},{"name":"CollateralAuctions","is_native":false,"abilities":["key"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"next_auction_id","type":"u64"},{"name":"auctions","type":"0x1::table::Table<u64, 0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::collateral_auction::CollateralAuction<T0>>"},{"name":"live_auctions","type":"0x1::table::Table<u64, bool>"},{"name":"bad_auctions","type":"0x1::table::Table<u64, bool>"},{"name":"events","type":"0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::collateral_auction::CollateralAuctionEvents<T0>"}]}]}'
  );
}

export namespace reward_distributor {
  export class RewardDistributor {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::reward_distributor::RewardDistributor";
    d: bigint;
    p: _0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8.fixed_point64.FixedPoint64;
    current_epoch: bigint;
    current_scale: bigint;
    snapshots: _0x1.table.Table<Address, reward_distributor.Snapshot>;
    epoch_scale_sum: _0x1.table.Table<
      string,
      _0x1.table.Table<
        bigint,
        _0x1.table.Table<
          bigint,
          _0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8.fixed_point64.FixedPoint64
        >
      >
    >;
    e_t: _0x1.table.Table<string, _0x1.table.Table<Address, bigint>>;
    coins: string[];
  }

  export class Snapshot {
    static TYPE_QNAME =
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::reward_distributor::Snapshot";
    d_t: bigint;
    p_t: _0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8.fixed_point64.FixedPoint64;
    s_t: _0x1.table.Table<
      string,
      _0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8.fixed_point64.FixedPoint64
    >;
    epoch_t: bigint;
    scale_t: bigint;
  }

  export function loadTypes(_r: MoveCoder) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b","name":"reward_distributor","friends":["0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::stability_pool"],"exposed_functions":[{"name":"account_deposit","visibility":"friend","is_entry":false,"generic_type_params":[],"params":["&0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::reward_distributor::RewardDistributor","address"],"return":["u64"]},{"name":"claim","visibility":"friend","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&mut 0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::reward_distributor::RewardDistributor","address"],"return":["u64"]},{"name":"claimable","visibility":"friend","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::reward_distributor::RewardDistributor","address"],"return":["u64"]},{"name":"deposit","visibility":"friend","is_entry":false,"generic_type_params":[],"params":["&mut 0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::reward_distributor::RewardDistributor","address","u64"],"return":[]},{"name":"distribute","visibility":"friend","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&mut 0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::reward_distributor::RewardDistributor","u64","u64"],"return":[]},{"name":"flush","visibility":"friend","is_entry":false,"generic_type_params":[],"params":["&mut 0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::reward_distributor::RewardDistributor","address"],"return":[]},{"name":"new","visibility":"friend","is_entry":false,"generic_type_params":[],"params":[],"return":["0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::reward_distributor::RewardDistributor"]},{"name":"withdraw","visibility":"friend","is_entry":false,"generic_type_params":[],"params":["&mut 0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::reward_distributor::RewardDistributor","address","u64"],"return":[]},{"name":"withdraw_all","visibility":"friend","is_entry":false,"generic_type_params":[],"params":["&mut 0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::reward_distributor::RewardDistributor","address"],"return":[]}],"structs":[{"name":"RewardDistributor","is_native":false,"abilities":["store"],"generic_type_params":[],"fields":[{"name":"d","type":"u64"},{"name":"p","type":"0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8::fixed_point64::FixedPoint64"},{"name":"current_epoch","type":"u64"},{"name":"current_scale","type":"u64"},{"name":"snapshots","type":"0x1::table::Table<address, 0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b::reward_distributor::Snapshot>"},{"name":"epoch_scale_sum","type":"0x1::table::Table<0x1::string::String, 0x1::table::Table<u64, 0x1::table::Table<u64, 0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8::fixed_point64::FixedPoint64>>>"},{"name":"e_t","type":"0x1::table::Table<0x1::string::String, 0x1::table::Table<address, u64>>"},{"name":"coins","type":"vector<0x1::string::String>"}]},{"name":"Snapshot","is_native":false,"abilities":["store"],"generic_type_params":[],"fields":[{"name":"d_t","type":"u64"},{"name":"p_t","type":"0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8::fixed_point64::FixedPoint64"},{"name":"s_t","type":"0x1::table::Table<0x1::string::String, 0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8::fixed_point64::FixedPoint64>"},{"name":"epoch_t","type":"u64"},{"name":"scale_t","type":"u64"}]}]}'
  );
}

export class stability_pool_scripts extends AptosBaseProcessor {
  constructor(options: AptosBindOptions) {
    super("stability_pool_scripts", options);
  }
  static DEFAULT_OPTIONS: AptosBindOptions = {
    address:
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b",
    network: AptosNetwork.TEST_NET,
  };

  static bind(options: Partial<AptosBindOptions> = {}): stability_pool_scripts {
    return new stability_pool_scripts({
      ...stability_pool_scripts.DEFAULT_OPTIONS,
      ...options,
    });
  }

  onEntryClaimDistributedCollateral(
    func: (
      call: stability_pool_scripts.ClaimDistributedCollateralPayload,
      ctx: AptosContext
    ) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): stability_pool_scripts {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "stability_pool_scripts::claim_distributed_collateral",
      },
      fetchConfig
    );
    return this;
  }

  onEntryDepositMod(
    func: (
      call: stability_pool_scripts.DepositModPayload,
      ctx: AptosContext
    ) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): stability_pool_scripts {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "stability_pool_scripts::deposit_mod",
      },
      fetchConfig
    );
    return this;
  }

  onEntryWithdrawMod(
    func: (
      call: stability_pool_scripts.WithdrawModPayload,
      ctx: AptosContext
    ) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): stability_pool_scripts {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "stability_pool_scripts::withdraw_mod",
      },
      fetchConfig
    );
    return this;
  }

  loadTypesInternal(registry: MoveCoder) {
    loadAllTypes(registry);
  }
}

export namespace stability_pool_scripts {
  export interface ClaimDistributedCollateralPayload<T0 = any>
    extends TypedEntryFunctionPayload<[]> {
    arguments_decoded: [];
    type_arguments: [string];
  }

  export interface DepositModPayload<T0 = any>
    extends TypedEntryFunctionPayload<[bigint]> {
    arguments_decoded: [bigint];
    type_arguments: [string];
  }

  export interface WithdrawModPayload<T0 = any>
    extends TypedEntryFunctionPayload<[bigint]> {
    arguments_decoded: [bigint];
    type_arguments: [string];
  }

  export function loadTypes(_r: MoveCoder) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b","name":"stability_pool_scripts","friends":[],"exposed_functions":[{"name":"claim_distributed_collateral","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer"],"return":[]},{"name":"deposit_mod","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64"],"return":[]},{"name":"withdraw_mod","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64"],"return":[]}],"structs":[]}'
  );
}

export class collateral_auction_scripts extends AptosBaseProcessor {
  constructor(options: AptosBindOptions) {
    super("collateral_auction_scripts", options);
  }
  static DEFAULT_OPTIONS: AptosBindOptions = {
    address:
      "0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b",
    network: AptosNetwork.TEST_NET,
  };

  static bind(
    options: Partial<AptosBindOptions> = {}
  ): collateral_auction_scripts {
    return new collateral_auction_scripts({
      ...collateral_auction_scripts.DEFAULT_OPTIONS,
      ...options,
    });
  }

  onEntryBid(
    func: (
      call: collateral_auction_scripts.BidPayload,
      ctx: AptosContext
    ) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): collateral_auction_scripts {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "collateral_auction_scripts::bid",
      },
      fetchConfig
    );
    return this;
  }

  onEntryRepayDebt(
    func: (
      call: collateral_auction_scripts.RepayDebtPayload,
      ctx: AptosContext
    ) => void,
    filter?: CallFilter,
    fetchConfig?: MoveFetchConfig
  ): collateral_auction_scripts {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "collateral_auction_scripts::repay_debt",
      },
      fetchConfig
    );
    return this;
  }

  loadTypesInternal(registry: MoveCoder) {
    loadAllTypes(registry);
  }
}

export namespace collateral_auction_scripts {
  export interface BidPayload<T0 = any>
    extends TypedEntryFunctionPayload<[bigint, bigint, bigint]> {
    arguments_decoded: [bigint, bigint, bigint];
    type_arguments: [string];
  }

  export interface RepayDebtPayload<T0 = any>
    extends TypedEntryFunctionPayload<[bigint, bigint]> {
    arguments_decoded: [bigint, bigint];
    type_arguments: [string];
  }

  export function loadTypes(_r: MoveCoder) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x347b2ef2a5509414630d939e6cedb0c7fae5e1a295bf93587fec19cac34ba5b","name":"collateral_auction_scripts","friends":[],"exposed_functions":[{"name":"bid","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64","u64","u64"],"return":[]},{"name":"repay_debt","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64","u64"],"return":[]}],"structs":[]}'
  );
}

export function loadAllTypes(_r: MoveCoder) {
  _0x1.loadAllTypes(_r);
  _0x94f0e00a99685c74067f7541b171bf2a4bd7d859609adce17980a7c924b135c8.loadAllTypes(
    _r
  );

  _r.load(fees.ABI);
  _r.load(init.ABI);
  _r.load(math.ABI);
  _r.load(vault.ABI);
  _r.load(tables.ABI);
  _r.load(package_.ABI);
  _r.load(vectors.ABI);
  _r.load(mod_coin.ABI);
  _r.load(fees_scripts.ABI);
  _r.load(sorted_vaults.ABI);
  _r.load(vault_scripts.ABI);
  _r.load(stability_pool.ABI);
  _r.load(collateral_auction.ABI);
  _r.load(reward_distributor.ABI);
  _r.load(stability_pool_scripts.ABI);
  _r.load(collateral_auction_scripts.ABI);
}
